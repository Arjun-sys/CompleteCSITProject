#pragma checksum "C:\Users\admin\Desktop\Easy CSIT\Views\Course\Physics.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "aa5fcf3a966b031f517f3f970dd168b114e9a9b6"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Course_Physics), @"mvc.1.0.view", @"/Views/Course/Physics.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Users\admin\Desktop\Easy CSIT\Views\_ViewImports.cshtml"
using EasyCSIT;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\admin\Desktop\Easy CSIT\Views\_ViewImports.cshtml"
using EasyCSIT.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"aa5fcf3a966b031f517f3f970dd168b114e9a9b6", @"/Views/Course/Physics.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"c841dc2f78dc3024c0f2f0360efb9bebdc1dbcee", @"/Views/_ViewImports.cshtml")]
    public class Views_Course_Physics : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("asp-controller", "Course", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("asp-action", "Physics", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString(" btn btn-info"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("asp-action", "Physicsnote", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_4 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString(" btn btn-outline-info"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("<div class=\"terms\">\r\n\r\n    <div class=\"row no-gutters\">\r\n        <div class=\"col\" style=\"margin-bottom: 1%; text-align: center;\">\r\n            <h1 style=\"margin-top: 1%;\" class=\"text-center\">Physics Syllabus</h1>\r\n            ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("a", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "aa5fcf3a966b031f517f3f970dd168b114e9a9b64885", async() => {
                WriteLiteral("Syllabus");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper.Controller = (string)__tagHelperAttribute_0.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_0);
            __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper.Action = (string)__tagHelperAttribute_1.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_1);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n            ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("a", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "aa5fcf3a966b031f517f3f970dd168b114e9a9b66343", async() => {
                WriteLiteral("Notes");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper.Controller = (string)__tagHelperAttribute_0.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_0);
            __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper.Action = (string)__tagHelperAttribute_3.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_3);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_4);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"



        </div>
    </div>



    <div class=""card col-xl-6 col-lg-6 col-md-6 col-sm-12"">


        <div class=""card-body p-0"">
            <table class=""table table-sm"">

                <tbody>
                    <tr>
                        <td>Title</td>

                        <td>
                            Physics
                        </td>
                    </tr>
                    <tr>
                        <td>Course code</td>

                        <td>PHY113</td>
                    </tr>
                    <tr>
                        <td>Nature of course</td>

                        <td>Theory + Lab</td>
                    </tr>
                    <tr>
                        <td>Semester</td>

                        <td>First-Semester</td>
                    </tr>
                    <tr>
                        <td>Full marks</td>

                        <td>60 + 20 + 20</td>
                    </tr>
                    <tr>
 ");
            WriteLiteral(@"                       <td>Pass marks</td>

                        <td>24 + 8 + 8</td>
                    </tr>
                    <tr>
                        <td>Credit Hrs</td>

                        <td>3</td>
                    </tr>
                    <tr>
                        <td>Elective/Compulsary</td>

                        <td>Compulsary</td>

                    </tr>

                </tbody>
            </table>
        </div>

    </div>



    <div class=""row"">
        <div class=""col"">
            <div class=""card"">
                <div class=""card-header"">
                    <h3 class=""card-title"">
                        <i class=""fa fa-book""></i>
                        Course Description
                    </h3>

                </div>
                <!-- /.card-header -->
                <div class=""card-body"">
                    <p>
                        <b>Course Synopsis:</b> The course deals with related topics in Mechanics and E");
            WriteLiteral(@"lectrodynamics.
                        Mechanics: Non Relativistic Particle dynamics, conservation laws, harmonic Oscillator,
                        dynamics of rigid body, strength of materials, hydrodynamics. Electrodynamics: Electrostatics,
                        dielectrics, Electrostatic and magnetic energy, Maxwell's equation, propagation of
                        electromagnetic wave. Laboratory works are designed to complement and supplement the theory
                        course.</p>
                    <p><b>
    Goal:
</b> The course aims at introducing the concepts and methods of physics needed for
                        application in various branch of modern science and technology.
                    </p>
                </div>
                <!-- /.card-body -->
            </div>
            <!-- /.card -->
        </div>
        <!-- ./col -->

    </div>

    <div class=""row"">
        <div class=""col"">
            <div class=""card"">
                <div class");
            WriteLiteral(@"=""card-header"">
                    <h3 class=""card-title"">
                        <i class=""fa fa-file""></i>
                        Units and Unit Content
                    </h3>
                    <div class=""card-tools"">

                    </div>
                </div>
                <!-- /.card-header -->
                <div class=""card-body"">
                    <dl>

                        <dt>
                            1.
                            Rotational Dynamics and Oscillatory Motion
                        </dt>
                        <dt>Teaching Hours: 5 hrs</dt>
                        <dd><p>Moment of inertia and torque, Rotational kinetic energy, Conservation of angular momentum,</p><p>Oscillation of spring: frequency, period, amplitude, phase angle and energy</p><div><br></div></dd>

                        <dt>
                            2.
                            Electric and Magnetic Field
                        </dt>
                        ");
            WriteLiteral(@"<dt>Teaching Hours: 5 hrs</dt>
                        <dd><p>Electric and magnetic field and potential, Force on current carrying wire, magnetic dipole</p><p>moment, Force on a moving charge, Hall effect, Electromagnetic waves</p><div><br></div></dd>

                        <dt>
                            3.
                            Fundamentals of Atomic Theory
                        </dt>
                        <dt>Teaching Hours: 8 hrs</dt>
                        <dd><p>Blackbody radiation, Bohr atom, Spectrum of Hydrogen, Franck-Hertz experiment, de Broglie’s</p><p>hypothesis and its experimental verification, Uncertainty principle and its origin, matter waves</p><p>and the uncertainty principle, group velocity.</p><div><br></div></dd>

                        <dt>
                            4.
                            Methods of Quantum Mechanics
                        </dt>
                        <dt>Teaching Hours: 5 hrs</dt>
                        <dd><p>Schrodinger theo");
            WriteLiteral(@"ry of quantum mechanics and its application, Outline of the solution of</p><p>Schrodinger equation for H-atom, space quantization and spin, Atomic wave functions</p><div><br></div></dd>

                        <dt>
                            5.
                            Fundamentals of Solid State Physics
                        </dt>
                        <dt>Teaching Hours: 6 hrs</dt>
                        <dd><p>Crystal structure, Crystal bonding, Classical and quantum mechanical free electron model, Bloch</p><p>theorem, Kronig-Penny model, Tight-binding approximation, conductors, insulators and</p><p>semiconductors, effective mass and holes.</p><div><br></div></dd>

                        <dt>
                            6.
                            Semiconductor and Semiconductor devices
                        </dt>
                        <dt>Teaching Hours: 8 hrs</dt>
                        <dd><p>Intrinsic and extrinsic semiconductors, Electrical conductivity of semiconducto");
            WriteLiteral(@"rs,</p><p>Photoconductivity, Metal-metal junction: The contact potential, The semiconductor diode,</p><p>Bipolar junction transistor (BJT), Field effect transistor (FET).</p><div><br></div></dd>

                        <dt>
                            7.
                            Universal Gates and Physics of Integrated Circuits
                        </dt>
                        <dt>Teaching Hours: 8 hrs</dt>
                        <dd><p>Universal gates, RTL and TTL gates, Memory circuits, Clock circuits, Semiconductor</p><p>purification: Zone refining, Single crystal growth, Processes of IC production, Electronic</p><p>component fabrication on a chip.</p><div><br></div></dd>

                        <dt>
                            8.
                            Old Syllabus
                        </dt>
                        <dt>Teaching Hours: 0 hrs</dt>
                        <dd><p>&nbsp;</p></dd>

                    </dl>
                </div>
                <!-- /.card-");
            WriteLiteral(@"body -->
            </div>
            <!-- /.card -->
        </div>
        <!-- ./col -->

    </div>

    <div class=""row"">
        <div class=""col"">
            <div class=""card"">
                <div class=""card-header"">
                    <h3 class=""card-title"">
                        <i class=""fa fa-desktop""></i>
                        <i class=""fa fa-flask""></i>
                        Lab and Practical works
                    </h3>

                </div>
                <!-- /.card-header -->
                <div class=""card-body"">
                    <p>Students should perform at least 5 experiments (at least one from each groups) in a group of 2 students. They</p><p>should submit report of the experiment individually. Students should write their lab report of each experiment in</p><p>this format:</p><p>Name of the Experiment:</p><p>Apparatus Required:</p><p>Theory/Working Formula</p><p>Observation</p><p>Calculation</p><p>Result</p><p>Error Analysis</p><p>Discussion</p><");
            WriteLiteral(@"p>The list the experiments are as follows:</p><p>(1) Determine the moment of inertia and angular acceleration of a flywheel.</p><p>OR</p><p>Study Bar Pendulum and find moment of inertia and angular acceleration about various fix points.</p><p>OR</p><p>Study Torsional pendulum and find moment of inertia and angular acceleration.</p><p>(2) Determine the capacitance of a capacitor by ac bridge (de-Sauty’s method).</p><p>OR</p><p>Study the characteristics of Zener diode its use as voltage regulation</p><p>OR</p><p>Design and study the parallel LCR circuits for finding the quality factor of the elements.</p><p>(3) Study the temperature dependence of resistance of a given semiconductor.</p><p>OR</p><p>Study and determine the band gap in metals and semiconductors using appropriate method.</p><p>(4) Study the drain and transfer characteristics of junction field effect transistor (JFET).</p><p>OR</p><p>Study RS-Flip-flop using breadboard.</p><p>(5) Design and Study the LOGIC Gates: NOT, AND, OR, NOR &amp; NAND Using T");
            WriteLiteral(@"TL. Also Study the</p><p>Power Loss in NOT Gate.</p><p>OR</p><p>Study NAND/NOR gates as Universal logic gates.</p><p>Evaluation: The duration of practical examination will be 3 hours. Students should perform one experiment,</p><p>took own observational data, calculate the result and interpret it using suitable error analysis. The internal and</p><p>external examiner (appointed by the Dean Office) will evaluate the performance in this format:</p><p>(1) Experiment:</p><p>40%</p><p>(2) Write-up:</p><p>30%</p><p>(3) VIVA Examination:</p><p>30%</p><div><br></div>
                </div>
                <!-- /.card-body -->
            </div>
            <!-- /.card -->
        </div>
        <!-- ./col -->

    </div>



</div>");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
