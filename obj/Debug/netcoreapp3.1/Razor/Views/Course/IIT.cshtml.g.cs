#pragma checksum "C:\Users\admin\Desktop\Easy CSIT\Views\Course\IIT.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "9fa0fd9a8b987ad1457c0a535055694750b2c15d"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Course_IIT), @"mvc.1.0.view", @"/Views/Course/IIT.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Users\admin\Desktop\Easy CSIT\Views\_ViewImports.cshtml"
using EasyCSIT;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\admin\Desktop\Easy CSIT\Views\_ViewImports.cshtml"
using EasyCSIT.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"9fa0fd9a8b987ad1457c0a535055694750b2c15d", @"/Views/Course/IIT.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"c841dc2f78dc3024c0f2f0360efb9bebdc1dbcee", @"/Views/_ViewImports.cshtml")]
    public class Views_Course_IIT : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("asp-controller", "Course", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("asp-action", "IIT", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString(" btn btn-info"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("asp-action", "IITnote", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_4 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString(" btn btn-outline-info"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("<div class=\"terms\">\r\n\r\n    <div class=\"row no-gutters\">\r\n        <div class=\"col\" style=\"margin-bottom: 1%; text-align: center;\">\r\n            <h1 style=\"margin-top: 1%;\" class=\"text-center\"> Introduction to Information Technology</h1>\r\n            ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("a", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "9fa0fd9a8b987ad1457c0a535055694750b2c15d4880", async() => {
                WriteLiteral("Syllabus");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper.Controller = (string)__tagHelperAttribute_0.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_0);
            __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper.Action = (string)__tagHelperAttribute_1.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_1);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n            ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("a", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "9fa0fd9a8b987ad1457c0a535055694750b2c15d6338", async() => {
                WriteLiteral("Notes");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper.Controller = (string)__tagHelperAttribute_0.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_0);
            __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper.Action = (string)__tagHelperAttribute_3.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_3);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_4);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"



        </div>
    </div>




    <div class=""card col-xl-6 col-lg-6 col-md-6 col-sm-12"">


        <div class=""card-body p-0"">
            <table class=""table table-sm"">

                <tbody>
                    <tr>
                        <td>Title</td>

                        <td>
                            Introduction to Information Technology
                        </td>
                    </tr>
                    <tr>
                        <td>Course code</td>

                        <td>CSC109</td>
                    </tr>
                    <tr>
                        <td>Nature of course</td>

                        <td>Theory + Lab</td>
                    </tr>
                    <tr>
                        <td>Semester</td>

                        <td>First-Semester</td>
                    </tr>
                    <tr>
                        <td>Full Marks</td>

                        <td>60 + 20 + 20</td>
                    <");
            WriteLiteral(@"/tr>
                    <tr>
                        <td>Pass marks</td>

                        <td>24 + 8 + 8</td>
                    </tr>
                    <tr>
                        <td>Credit Hrs</td>

                        <td>3</td>
                    </tr>
                    <tr>
                        <td>Elective/Compulsary</td>

                        <td>Compulsary</td>

                    </tr>

                </tbody>
            </table>
        </div>

    </div>



    <div class=""row"">
        <div class=""col"">
            <div class=""card"">
                <div class=""card-header"">
                    <h3 class=""card-title"">
                        <i class=""fa fa-sticky-note""></i>
                        Course Description
                    </h3>

                </div>
                <!-- /.card-header -->
                <div class=""card-body"">
                    <p><b>Course Description:</b> This course covers the basic concepts ");
            WriteLiteral(@"of computers and information technology including introduction, hardware, software, memory, input/output, data representation, database, networks and data communication, Internet, multimedia, and computer security.</p><p><br></p><p><b>Course Objectives:</b> The main objective of this course is to provide students knowledge of fundamental concepts of computers and information technology.</p><div><br></div>
                </div>
                <!-- /.card-body -->
            </div>
            <!-- /.card -->
        </div>
        <!-- ./col -->

    </div>

    <div class=""row"">
        <div class=""col"">
            <div class=""card"">
                <div class=""card-header"">
                    <h3 class=""card-title"">
                        <i class=""fa fa-file""></i>
                        Units and Unit Content
                    </h3>

                </div>
                <!-- /.card-header -->
                <div class=""card-body"">
                    <dl>

               ");
            WriteLiteral(@"         <dt>
                            1.
                            Introduction to Computer
                        </dt>
                        <dt>Teaching Hours: 3 hrs</dt>
                        <dd><p>Introduction; Digital and Analog Computers; Characteristics of Computer; History of Computer;Generations of Computer; Classification of Computer; The Computer System; Application of Computers</p><div><br></div></dd>

                        <dt>
                            2.
                            The Computer System Hardware
                        </dt>
                        <dt>Teaching Hours: 3 hrs</dt>
                        <dd><p>Introduction; Central Processing Unit; Memory Unit; Instruction Format; Instruction Set; Instruction Cycle; Microprocessor; Interconnecting the Units of a Computer; Inside a Computer Cabinet</p><div><br></div></dd>

                        <dt>
                            3.
                            Computer Memory
                       ");
            WriteLiteral(@" </dt>
                        <dt>Teaching Hours: 4 hrs</dt>
                        <dd><p>Introduction; Memory Representation; Memory Hierarchy; CPU Registers; Cache Memory; Primary Memory; Secondary Memory; Access Types of Storage Devices; Magnetic Tape; Magnetic Disk; Optical Disk; Magneto-Optical Disk; How the Computer uses its memory</p><div><br></div></dd>

                        <dt>
                            4.
                            Input and Output Devices
                        </dt>
                        <dt>Teaching Hours: 4 hrs</dt>
                        <dd><p>Introduction; Input-Output Unit; Input Devices; Human Data Entry Devices; Source Data Entry Devices; Output Devices; I/O Port; Working of I/O System</p><div><br></div></dd>

                        <dt>
                            5.
                            Data Representation
                        </dt>
                        <dt>Teaching Hours: 6 hrs</dt>
                        <dd><p>Introduction;");
            WriteLiteral(@" Number System; Conversion from Decimal to Binary, Octal, Hexadecimal; Conversion of Binary, Octal, Hexadecimal to Decimal; Conversion of Binary to Octal, Hexadecimal; Conversion of Octal, Hexadecimal to Binary; Binary Arithmetic; Signed and Unsigned Numbers; Binary Data Representation; Binary Coding Schemes; Logic Gates</p><div><br></div></dd>

                        <dt>
                            6.
                            Computer Software
                        </dt>
                        <dt>Teaching Hours: 6 hrs</dt>
                        <dd><p>Introduction; Types of Software; System Software; Application Software; Software Acquisition; Operating System (Introduction, Objectives of Operating System, Types of OS, Functions of OS,Process Management, Memory Management, File Management, Device Management, Protection and Security, User Interface, Examples of Operating Systems)</p><div><br></div></dd>

                        <dt>
                            7.
                        ");
            WriteLiteral(@"    Data Communication and Computer Network
                        </dt>
                        <dt>Teaching Hours: 5 hrs</dt>
                        <dd><p>Introduction; Importance of Networking; Data Transmission Media; Data Transmission across Media; Data Transmission and Data Networking; Computer Network; Network Types; Network Topology; Communication Protocol; Network Devices; Wireless Networking</p><div><br></div></dd>

                        <dt>
                            8.
                            The Internet and Internet Services
                        </dt>
                        <dt>Teaching Hours: 4 hrs</dt>
                        <dd><p>Introduction; History of Internet; Internetworking Protocol; The Internet Architecture; Managing the Internet; Connecting to Internet; Internet Connections; Internet Address; Internet</p><p>Services; Uses of Internet; Introduction to Internet of Things (IoT), Wearable Computing, and Cloud Computing, Introduction to E-commerce, E-governance,");
            WriteLiteral(@" and Smart City, and GIS</p><div><br></div></dd>

                        <dt>
                            9.
                            Fundamentals of Database
                        </dt>
                        <dt>Teaching Hours: 4 hrs</dt>
                        <dd><p>Introduction; Database; Database System; Database Management System; Database System Architectures; Database Applications; Introduction to Data Warehousing, Data mining, and BigData</p><div><br></div></dd>

                        <dt>
                            10.
                            Multimedia
                        </dt>
                        <dt>Teaching Hours: 3 hrs</dt>
                        <dd><p>Introduction; Multimedia - Definition; Characteristics of Multimedia; Elements of Multimedia;Multimedia Applications</p><div><br></div></dd>

                        <dt>
                            11.
                            Computer Security
                        </dt>
                       ");
            WriteLiteral(@" <dt>Teaching Hours: 3 hrs</dt>
                        <dd><p>Introduction; Security Threat and Security Attack; Malicious Software; Security Services;Security Mechanisms (Cryptography, Digital Signature, Firewall, Users Identification and Authentication, Intrusion Detection Systems); Security Awareness; Security Policy</p><div><br></div></dd>

                    </dl>
                </div>
                <!-- /.card-body -->
            </div>
            <!-- /.card -->
        </div>
        <!-- ./col -->

    </div>

    <div class=""row"">
        <div class=""col"">
            <div class=""card"">
                <div class=""card-header"">
                    <h3 class=""card-title"">
                        <i class=""fa fa-desktop""></i>
                        <i class=""fa fa-flask""></i>
                        Lab and Practical works
                    </h3>

                </div>
                <!-- /.card-header -->
                <div class=""card-body"">
                  ");
            WriteLiteral(@"  <p><b>Laboratory Works:</b></p><p>
                        After completing this course, students should have practical knowledge of different hardware components of computer, operating systems, Word Processors, Spreadsheets, Presentation Graphics, Database Management Systems, and Internet and its services. The laboratory work includes:
                    </p><p>1. Demonstration of different hardware components of a computer.</p>
                    <p>2. Knowledge of different operating systems like Windows, Linux, and DOS; Working with folders; Adding and removing programs.</p>
                    <p>3. Knowledge of different features of word processors like creating, saving, opening, editing, formatting, and printing documents; Using page setup; Working with bullets and numbers; Working with tables, mail merge, macros, and table of contents; Inserting pictures; Checking spelling, thesaurus and grammar.</p>
                    <p>4. Knowledge of Spreadsheet features like workbooks and worksheets, fu");
            WriteLiteral(@"nctions and formulas, cell referencing, sorting, data validation, conditional formatting; Creating charts.</p>
                    <p>5. Creating presentation slides; Adding animations; Inserting Charts, Graphics, Movies and Sound Clips.</p>
                    <p>6. Creating tables, query, reports, and forms; Understanding different data types.</p>
                    <p>7. Understanding Internet and its services like WWW and E-mail; Using search engine; Managing web browsers</p><div><br></div>
                </div>
                <!-- /.card-body -->
            </div>
            <!-- /.card -->
        </div>
        <!-- ./col -->

    </div>



</div>");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
