#pragma checksum "C:\Users\admin\Desktop\Easy CSIT\Views\Course\AJP.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "03ca3904effce5e42a28cf09a61aa23acf2dc998"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Course_AJP), @"mvc.1.0.view", @"/Views/Course/AJP.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Users\admin\Desktop\Easy CSIT\Views\_ViewImports.cshtml"
using EasyCSIT;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\admin\Desktop\Easy CSIT\Views\_ViewImports.cshtml"
using EasyCSIT.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"03ca3904effce5e42a28cf09a61aa23acf2dc998", @"/Views/Course/AJP.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"c841dc2f78dc3024c0f2f0360efb9bebdc1dbcee", @"/Views/_ViewImports.cshtml")]
    public class Views_Course_AJP : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("asp-controller", "Course", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("asp-action", "AJP", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString(" btn btn-info"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("asp-action", "AJPnote", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_4 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString(" btn btn-outline-info"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral(@"<div class=""terms"">
  

        <div class=""row no-gutters"">
            <div class=""col"" style=""margin-bottom: 1%; text-align: center;"">
                <h1 style=""margin-top: 1%;"" class=""text-center""> Advanced Java Programming Syllabus</h1>
                ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("a", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "03ca3904effce5e42a28cf09a61aa23acf2dc9984887", async() => {
                WriteLiteral("Syllabus");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper.Controller = (string)__tagHelperAttribute_0.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_0);
            __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper.Action = (string)__tagHelperAttribute_1.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_1);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n                ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("a", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "03ca3904effce5e42a28cf09a61aa23acf2dc9986349", async() => {
                WriteLiteral("Notes");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper.Controller = (string)__tagHelperAttribute_0.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_0);
            __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper.Action = (string)__tagHelperAttribute_3.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_3);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_4);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"



            </div>
        </div>

        <div class=""card col-xl-6 col-lg-6 col-md-6 col-sm-12"">


            <div class=""card-body p-0"">
                <table class=""table table-sm"">

                    <tbody>
                        <tr>
                            <td>Title</td>

                            <td>
                                Advanced Java Programming
                            </td>
                        </tr>
                        <tr>
                            <td>Course code</td>

                            <td>CSC409</td>
                        </tr>
                        <tr>
                            <td>Nature of course</td>

                            <td>Theory + Lab</td>
                        </tr>
                        <tr>
                            <td>Semester</td>

                            <td>Seventh-Semester</td>
                        </tr>
                        <tr>
                            <td>");
            WriteLiteral(@"Full marks</td>

                            <td>60 + 20 + 20</td>
                        </tr>
                        <tr>
                            <td>Pass marks</td>

                            <td>24 + 8 + 8</td>
                        </tr>
                        <tr>
                            <td>Credit Hrs</td>

                            <td>3</td>
                        </tr>
                        <tr>
                            <td>Elective/Compulsary</td>

                            <td>Compulsary</td>

                        </tr>

                    </tbody>
                </table>
            </div>

        </div>



        <div class=""row"">
            <div class=""col"">
                <div class=""card"">
                    <div class=""card-header"">
                        <h3 class=""card-title"">
                            <i class=""fa fa-book""></i>
                            Course Description
                        </h3>

         ");
            WriteLiteral(@"           </div>
                    <!-- /.card-header -->
                    <div class=""card-body"">
                        <p>
                            <b>Course Description:</b>This course familiarizes students with basic as well as advanced features of Java Programming
                            Emphasis will be given to GUI and event-driven programming, Database Connectivity, Socket
                            Programming, Servlets and JSP Technology, and Distributed Programming.
                        </p><p>
                            <b>Course Objectives:</b>The main objective of this course is to
                            <ul>
                                <li>Introduce basic concepts of Java Programming.</li>
                                <li>Exemplify the concept of GUI programming and JDBC</li>
                                <li>Demonstrate socket programming. remote objects, and servlet and JSP Technology</li>
                            </ul>

                    ");
            WriteLiteral(@"    </p><div><br></div>
                    </div>
                    <!-- /.card-body -->
                </div>
                <!-- /.card -->
            </div>
            <!-- ./col -->

        </div>

        <div class=""row"">
            <div class=""col"">
                <div class=""card"">
                    <div class=""card-header"">
                        <h3 class=""card-title"">
                            <i class=""fa fa-file""></i>
                            Units and Unit Content
                        </h3>

                    </div>
                    <!-- /.card-header -->
                    <div class=""card-body"">
                        <dl>

                            <dt>
                                1.
                                Programming in Java
                            </dt>
                            <dt>Teaching Hours: 8 hrs</dt>
                            <dd>
                                <ul>
                                  ");
            WriteLiteral(@"  <li>
                                        &nbsp; 1.1. Java Architecture, Java Buzzwords, Path and ClassPath variables, Sample Java Program,
                                        Compiling and Running Java Programs.
                                        1.2. Arrays, for each loop, Class and Object, Overloading, Access Privileges, Interface, Inner
                                        Class, Final and Static Modifiers, Packages, Inheritance, Overriding.
                                        1.3. Handling Exceptions: Try, Catch, Finally, Throws, and Throw keywords, Creating
                                        Exception Class
                                        1.4. Concurrency: Introduction, Thread States, Writing Multithreaded Programs, Thread
                                        Properties, Thread Synchronization, Thread Priorities
                                        1.5. Working with Files: Byte Stream Classes, Character Stream Classes, Random Access
                     ");
            WriteLiteral(@"                   File, Reading and Writing Objects.
                                    </li>
                                </ul><div><br></div>
                            </dd>

                            <dt>
                                2.
                                User Interface Components with Swing
                            </dt>
                            <dt>Teaching Hours: 10 hrs</dt>
                            <dd>
                                <ul>
                                    <li>
                                        &nbsp;2.1. Introduction: Concept of AWT, AWT vs Swing, Java Applets, Applet Life Cycle, Swing
                                        Class Hierarchy, Component and Containers
                                        2.2. Layout Management: No Layout, Flow layout, Border Layout, Grid Layout, Gridbag
                                        Layout, Group Layout.
                                        2.3. GUI Controls: Text Fields, Passwor");
            WriteLiteral(@"d Fields, Text Areas, Scroll Pane, Labels, Check
                                        Boxes, Radio Buttons, Borders, Combo Boxes, Sliders
                                        2.4. Menu, Menu Item, Icons in Menu Items, Check Box and Radio Buttons in Menu Items,
                                        Pop-up Menus, Keyboard Mnemonics and Accelerators, Enabling and Disabling Menu
                                        Items, Toolbars, Tooltips
                                        2.5. Option Dialogs, Creating Dialogs, File Choosers, Color Choosers, Internal Frames,
                                        Frames, Tables, Trees, and Tables
                                    </li>
                                </ul><div><br></div>
                            </dd>

                            <dt>
                                3.
                                Event Handling
                            </dt>
                            <dt>Teaching Hours: 4 hrs</dt>
                 ");
            WriteLiteral(@"           <dd>
                                <ul>
                                    <li>
                                        &nbsp;3.1. Event Handling Concept, Listener Interfaces, Using Action Commands, Adapter
                                        Classes
                                        3.2. Handling Action Events, Key Events, Focus Events, Mouse Event, Window Event, Item
                                        Events
                                    </li>
                                </ul><div><br></div>
                            </dd>

                            <dt>
                                4.
                                Database Connectivity
                            </dt>
                            <dt>Teaching Hours: 4 hrs</dt>
                            <dd>
                                <ul>
                                    <li>
                                        &nbsp;4.1. JDBC Architecture, JDBC Driver Types, JDBC Configuratio");
            WriteLiteral(@"n, Managing Connections,
                                        Statements, Result Set, SQL Exceptions
                                        4.2. DDL and DML Operations using Java, Prepared Statements, Multiple Results, Scrollable
                                        Result Sets, Updateable Result Sets, Row Sets and Cached Row Sets, Transactions, SQL
                                        Escapes
                                    </li>
                                </ul><div><br></div>
                            </dd>

                            <dt>
                                5.
                                Network Programming
                            </dt>
                            <dt>Teaching Hours: 5 hrs</dt>
                            <dd>
                                <ul>
                                    <li>
                                        &nbsp;5.1. Transmission control Protocol (TCP), User Datagram Protocol (UDP), Ports, IP Address
         ");
            WriteLiteral(@"                               Network Classes in JDK
                                        5.2. Socket programming using TCP, Socket programming using UDP, Working with
                                        URL’s, Working with URL Connection Class.
                                        5.3. Java Mail API, Sending and Receiving Email
                                    </li>
                                </ul><div><br></div>
                            </dd>

                            <dt>
                                6.
                                GUI with JavaFX
                            </dt>
                            <dt>Teaching Hours: 3 hrs</dt>
                            <dd>
                                <ul>
                                    <li>
                                        &nbsp;6.1. Introduction, JavaFX vs Swing, JavaFX Layouts: FlowPane, BorderPane, Hbox, VBox,
                                        GridPane
                                 ");
            WriteLiteral(@"       6.2. JavaFX UI Controls: Label, TextField, Button, RadioButton, CheckBox, Hyperlink,
                                        Menu, Tooltip, FileChooser.
                                    </li>
                                </ul><ul><li>Java Bean: Creating a Java Bean, Creating a Bean Manifest File, Creating a Bean JAR File, Using a New Bean, Adding Controls to Beans, Giving a Bean Properties, Creating Bound Properties, Giving a Bean Methods, Giving a Bean an Icon</li></ul><div><br></div>
                            </dd>

                            <dt>
                                7.
                                Servlets and Java Server pages
                            </dt>
                            <dt>Teaching Hours: 8 hrs</dt>
                            <dd>
                                <ul>
                                    <li>
                                        7.1. Web Container, Introduction to Servlets, Life cycle of servlets, The servlet APIs,
       ");
            WriteLiteral(@"                                 Writing Servlet Programs, Reading Form Parameters, Processing Forms, Handling
                                        HTTP Request and Response (GET / POST Request), Database Access with Servlets,
                                        Handling Cookies and Session.
                                        7.2. Servlet vs JSP, JSP Access Model, JSP Syntax (Directions, Declarations, Expression,
                                        Scriplets, Comments), JSP Implicit Objects, Object Scope, Processing Forms, Database
                                        Access with JSP.
                                        7.3. Introduction to Java Web Frameworks
                                    </li>
                                </ul><div><br></div>
                            </dd>

                            <dt>
                                8.
                                RMI and CORBA
                            </dt>
                            <dt>Teachin");
            WriteLiteral(@"g Hours: 3 hrs</dt>
                            <dd>
                                <ul>
                                    <li>
                                        8.1 Introduction of RMI, Architecture of RMI, Creating and Executing RMI Applications
                                        8.2 Introduction to CORBA, RMI vs CORBA, Architecture of CORBA, IDL, Simple
                                        CORBA Program.
                                    </li>
                                </ul><div><br></div>
                            </dd>

                        </dl>
                    </div>
                    <!-- /.card-body -->
                </div>
                <!-- /.card -->
            </div>
            <!-- ./col -->

        </div>

        <div class=""row"">
            <div class=""col"">
                <div class=""card"">
                    <div class=""card-header"">
                        <h3 class=""card-title"">
                            <i class=""f");
            WriteLiteral(@"a fa-desktop""></i>
                            <i class=""fa fa-flask""></i>
                            Lab and Practical works
                        </h3>

                    </div>
                    <!-- /.card-header -->
                    <div class=""card-body"">
                        <p><b>Laboratory Works:</b></p><p>
                            The laboratory work includes writing programs related to basic java programming concepts,
                            Designing GUI, Event Handling, JDBC, Network Programming, Web Programming, and
                            Distributed Programming. They also learn to develop web applications using Java Web
                            Frameworks.
                        </p><div><br></div>
                    </div>
                    <!-- /.card-body -->
                </div>
                <!-- /.card -->
            </div>
            <!-- ./col -->

        </div>

        <div class=""row"">
            <div class=""col"">
     ");
            WriteLiteral(@"           <div class=""card"">
                    <div class=""card-header"">
                        <h3 class=""card-title"">
                            <i class=""fa fa-book""></i>
                            Books Description
                        </h3>

                    </div>
                    <!-- /.card-header -->
                    <div class=""card-body"">
                        <p>
                            <b>Text Books:</b>
                            <br />1. Cay S. Horstmann, Core Java Volume I--Fundamentals, Pearson, Eleventh Edition, 2018
                            <br /> 2. Cay S. Horstmann, Core Java Volume II-Advance Features, Pearson, Eleventh Edition,
                            2019
                            <br /> 3. Herbert Schildt, Java: The Complete Reference, McGraw-Hill Education, Eleventh
                            Edition, 2018
                        </p>
                        <p>
                            <b>Reference Books:</b>
                ");
            WriteLiteral(@"            <br /> 1. D.T. Editorial Services, Java 8 Programming Black Book, Dreamtech Press, 2015
                        </p><div><br></div>
                    </div>
                    <!-- /.card-body -->
                </div>
                <!-- /.card -->
            </div>
            <!-- ./col -->

        </div>


</div>
");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
