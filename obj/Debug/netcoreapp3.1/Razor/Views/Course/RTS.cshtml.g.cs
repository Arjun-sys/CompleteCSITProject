#pragma checksum "C:\Users\admin\Desktop\Easy CSIT\Views\Course\RTS.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "f8893eb4df680239e9fcc56b73692c4aa50a2af4"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Course_RTS), @"mvc.1.0.view", @"/Views/Course/RTS.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Users\admin\Desktop\Easy CSIT\Views\_ViewImports.cshtml"
using EasyCSIT;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\admin\Desktop\Easy CSIT\Views\_ViewImports.cshtml"
using EasyCSIT.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"f8893eb4df680239e9fcc56b73692c4aa50a2af4", @"/Views/Course/RTS.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"c841dc2f78dc3024c0f2f0360efb9bebdc1dbcee", @"/Views/_ViewImports.cshtml")]
    public class Views_Course_RTS : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral(@"<div class=""terms"">
 

        <p>This page contains Syllabus of Real Time System (old-course) of CSIT. </p>

        <div class=""row no-gutters"">

        </div>


        <div class=""card col-xl-6 col-lg-6 col-md-6 col-sm-12"">


            <div class=""card-body p-0"">
                <table class=""table table-sm"">

                    <tbody>
                        <tr>
                            <td>Title</td>

                            <td>
                                Real Time System (old-course)
                            </td>
                        </tr>
                        <tr>
                            <td>Course code</td>

                            <td>DSC354</td>
                        </tr>
                        <tr>
                            <td>Nature of course</td>

                            <td>Theory</td>
                        </tr>
                        <tr>
                            <td>Semester</td>

                     ");
            WriteLiteral(@"       <td>Sixth-Semester</td>
                        </tr>
                        <tr>
                            <td>Full marks</td>

                            <td>80+20</td>
                        </tr>
                        <tr>
                            <td>Pass marks</td>

                            <td>32+8</td>
                        </tr>
                        <tr>
                            <td>Credit Hrs</td>

                            <td>3</td>
                        </tr>
                        <tr>
                            <td>Elective/Compulsary</td>

                            <td>Compulsary</td>

                        </tr>

                    </tbody>
                </table>
            </div>

        </div>



        <div class=""row"">
            <div class=""col"">
                <div class=""card"">
                    <div class=""card-header"">
                        <h3 class=""card-title"">
                            <i cla");
            WriteLiteral(@"ss=""fa fa-book""></i>
                            Course Description
                        </h3>
                       
                    </div>
                    <!-- /.card-header -->
                    <div class=""card-body"">
                        <div class=""MsoNormal"" style=""color: rgb(51, 51, 51); font-family: Arial, serif; font-size: 13px; margin-left: 94.5pt; text-indent: -94.5pt;""><span style=""font-size: small;""><b>Course Synopsis:&nbsp;</b>This course introduces the real time technology</span></div><div class=""MsoNormal"" style=""color: rgb(51, 51, 51); font-family: Arial, serif; font-size: 13px; margin-left: 94.5pt; text-indent: -94.5pt;""><span style=""font-size: small;"">.</span></div><div class=""MsoNormal"" style=""color: rgb(51, 51, 51); font-family: Arial, serif; font-size: 13px; margin-left: 94.5pt; text-indent: -94.5pt;""><span style=""font-size: small;""><b>Goal</b>:The main objective of this course is to address issue in scheduling, resource access control, and communication in the r");
            WriteLiteral(@"eal time system</span></div>
                    </div>
                    <!-- /.card-body -->
                </div>
                <!-- /.card -->
            </div>
            <!-- ./col -->

        </div>

        <div class=""row"">
            <div class=""col"">
                <div class=""card"">
                    <div class=""card-header"">
                        <h3 class=""card-title"">
                            <i class=""fa fa-file""></i>
                            Units and Unit Content
                        </h3>
                    
                    </div>
                    <!-- /.card-header -->
                    <div class=""card-body"">
                        <dl>

                            <dt>
                                1.
                                Introduction
                            </dt>
                            <dt>Teaching Hours: 3 hrs</dt>
                            <dd><p><span style=""color: rgb(51, 51, 51); font-family: Ari");
            WriteLiteral(@"al, serif; font-size: small; text-align: justify;"">Digital control, High-level controls, Signal processing, Real time applications</span><br></p></dd>

                            <dt>
                                2.
                                Hard versus Soft Real-Time Systems
                            </dt>
                            <dt>Teaching Hours: 4 hrs</dt>
                            <dd><p><span style=""color: rgb(51, 51, 51); font-family: Arial, serif; font-size: small; text-align: justify;"">Jobs and processors, Release times, Deadlines, and timing constraints, Hard and soft timing constraints, Hard real-time systems, Soft real-time systems</span><br></p></dd>

                            <dt>
                                3.
                                Reference Model of Real-Time Systems
                            </dt>
                            <dt>Teaching Hours: 4 hrs</dt>
                            <dd><p><span style=""color: rgb(51, 51, 51); font-family: Ari");
            WriteLiteral(@"al, serif; font-size: small; text-align: justify;"">Processor and resources, Temporal parameters of real-time workload, Periodic task model, Precedence constraints and data dependency, Other dependencies, Functional parameters, Resource parameters of jobs and parameters of resources, Scheduling hierarchy</span><br></p></dd>

                            <dt>
                                4.
                                Approaches to Real-Time Scheduling
                            </dt>
                            <dt>Teaching Hours: 4 hrs</dt>
                            <dd><p><span style=""color: rgb(51, 51, 51); font-family: Arial, serif; font-size: small; text-align: justify;"">Clock-driven approach, Weighted round-robin approach, Priority-driven approach, Dynamic versus static system, Effective release times and deadlines, Optimality of the EDF and LST algorithms, Nonoptimality of the EDF and LST algorithms, Challenges in validating timing constraints in priority-driven systems, Off-line versus ");
            WriteLiteral(@"on-line scheduling,</span><br></p></dd>

                            <dt>
                                5.
                                Clock-Driven Scheduling
                            </dt>
                            <dt>Teaching Hours: 5 hrs</dt>
                            <dd><p><span style=""color: rgb(51, 51, 51); font-family: Arial, serif; font-size: small; text-align: justify;"">Notations and assumptions, Static, Timer-driven scheduler, General structure of cyclic schedules, Cyclic executives, Improving the average response time of aperiodic jobs, Scheduling sporadic jobs, Practical considerations and generalization, Algorithm for constructing static schedules, Pros and cons of clock-driven scheduling</span><br></p></dd>

                            <dt>
                                6.
                                Priority-Driven Scheduling of Periodic Tasks
                            </dt>
                            <dt>Teaching Hours: 6 hrs</dt>
                         ");
            WriteLiteral(@"   <dd><p><span style=""color: rgb(51, 51, 51); font-family: Arial, serif; font-size: small; text-align: justify;"">Static assumption, Fixed-priority versus dynamic-priority algorithms, Maximum schedule utilization, Optimality of the RM and DM algorithms, A schedulability test for fixed-priority tasks with short response times, schedulability test for fixed-priority tasks with arbitrary response times, Sufficient schedulability conditions for the RM and DM algorithms, Practical factor</span><br></p></dd>

                            <dt>
                                7.
                                Scheduling Aperiodic and Sporadic Jobs in Priority-Driven Systems
                            </dt>
                            <dt>Teaching Hours: 6 hrs</dt>
                            <dd><p><span style=""color: rgb(51, 51, 51); font-family: Arial, serif; font-size: small; text-align: justify;"">Assumptions and approaches, Deferrable servers, Sporadic servers, Constant utilization, total bandwidth, and w");
            WriteLiteral(@"eighted fair-queuing servers, Slack stealing in deadline-driven systems, Slack stealing in fixed-priority systems, Scheduling of sporadic jobs, Real-time performance for jobs, with soft timing constraints, Low-level scheme for integrated scheduling</span><br></p></dd>

                            <dt>
                                8.
                                Resources and Resource Access Control
                            </dt>
                            <dt>Teaching Hours: 5 hrs</dt>
                            <dd><p><span style=""color: rgb(51, 51, 51); font-family: Arial, serif; font-size: small; text-align: justify;"">Assumptions on resources and their usage, Effects of resources contention and resource access control, Nonpreemptive critical sections, Basic priority-inheritance protocol, Basic priority-ceiling protocol, Stack-based, priority-ceiling (ceiling-priority) protocol, Use of priority-ceiling protocol in dynamic-priority system, Preemption-ceiling protocol, Controlling accesses t");
            WriteLiteral(@"o multiple-unit resources, Controlling concurrent accesses to data objects</span><br></p></dd>

                            <dt>
                                9.
                                Multiprocessor Scheduling, Resource Access Control and Synchronization
                            </dt>
                            <dt>Teaching Hours: 5 hrs</dt>
                            <dd><p><span style=""color: rgb(51, 51, 51); font-family: Arial, serif; font-size: small; text-align: justify;"">Model of multiprocessor and distributed systems, Task assignment, Multiprocessor priority-ceiling protocol, Elements of scheduling algorithms for end-end periodic tasks, End-to-end tasks in heterogeneous systems, Predictability and validation of dynamic multiprocessor systems.</span><br></p></dd>

                            <dt>
                                10.
                                Real –Time Communication
                            </dt>
                            <dt>Teaching Hours: 6 hrs");
            WriteLiteral(@"</dt>
                            <dd><p><span style=""color: rgb(51, 51, 51); font-family: Arial, serif; font-size: small; text-align: justify;"">Model of real-time communication, Priority-based service disciplines for switched networks, Weighted round-robin service disciplines, Medium access-control protocols of broadcast networks, Internet and resource reservation protocols, Real-time protocol, Communication in multi computer systems</span><br></p></dd>

                        </dl>
                    </div>
                    <!-- /.card-body -->
                </div>
                <!-- /.card -->
            </div>
            <!-- ./col -->

        </div>

        <div class=""row"">
            <div class=""col"">
                <div class=""card"">
                    <div class=""card-header"">
                        <h3 class=""card-title"">
                            <i class=""fa fa-desktop""></i>
                            <i class=""fa fa-flask""></i>
                            L");
            WriteLiteral(@"ab and Practical works
                        </h3>
                       
                    </div>
                    <!-- /.card-header -->
                    <div class=""card-body"">

                    </div>
                    <!-- /.card-body -->
                </div>
                <!-- /.card -->
            </div>
            <!-- ./col -->

        </div>



    </div>
");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
