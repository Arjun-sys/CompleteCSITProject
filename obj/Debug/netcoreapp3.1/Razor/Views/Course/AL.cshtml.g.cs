#pragma checksum "C:\Users\admin\Desktop\Easy CSIT\Views\Course\AL.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "4af23e950abf6c962e150603fba543b6996487a8"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Course_AL), @"mvc.1.0.view", @"/Views/Course/AL.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Users\admin\Desktop\Easy CSIT\Views\_ViewImports.cshtml"
using EasyCSIT;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\admin\Desktop\Easy CSIT\Views\_ViewImports.cshtml"
using EasyCSIT.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"4af23e950abf6c962e150603fba543b6996487a8", @"/Views/Course/AL.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"c841dc2f78dc3024c0f2f0360efb9bebdc1dbcee", @"/Views/_ViewImports.cshtml")]
    public class Views_Course_AL : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral(@"<div class=""terms"">
   

        <p>This page contains Syllabus of Applied Logic of CSIT. </p>

        <div class=""row no-gutters"">

        </div>


        <div class=""card col-xl-6 col-lg-6 col-md-6 col-sm-12"">


            <div class=""card-body p-0"">
                <table class=""table table-sm"">

                    <tbody>
                        <tr>
                            <td>Title</td>

                            <td>
                                Applied Logic
                            </td>
                        </tr>
                        <tr>
                            <td>Course code</td>

                            <td>CSC369</td>
                        </tr>
                        <tr>
                            <td>Nature of course</td>

                            <td>Theory + Lab</td>
                        </tr>
                        <tr>
                            <td>Semester</td>

                            <td>sixth-semeste");
            WriteLiteral(@"r</td>
                        </tr>
                        <tr>
                            <td>Full marks</td>

                            <td>60 + 20 + 20</td>
                        </tr>
                        <tr>
                            <td>Pass marks</td>

                            <td>24 + 8 + 8</td>
                        </tr>
                        <tr>
                            <td>Credit Hrs</td>

                            <td>3</td>
                        </tr>
                        <tr>
                            <td>Elective/Compulsary</td>

                            <td>Elective</td>

                        </tr>

                    </tbody>
                </table>
            </div>

        </div>



        <div class=""row"">
            <div class=""col"">
                <div class=""card"">
                    <div class=""card-header"">
                        <h3 class=""card-title"">
                            <i class=""fa fa-boo");
            WriteLiteral(@"k""></i>
                            Course Description
                        </h3>
                       
                    </div>
                    <!-- /.card-header -->
                    <div class=""card-body"">
                        <p><b>Course Description:</b></p><p>This course covers different concepts of logic including arguments, proposition and</p><p>syllogism, symbolic logic, quantification, fallacies, and reasoning.</p><p><b>Course Objectives:</b></p><p>The objectives of this course are to</p><ul><li>&nbsp;Understand Concept of Validity and Invalidity</li><li>&nbsp;Discuss argument and fallacy analysis techniques</li><li>&nbsp;Demonstrate proof of validity and invalidity</li><li>&nbsp;Understand Syllogistic rules and immediate inferences</li><li>&nbsp;Discuss inductive and casual reasoning</li></ul>
                    </div>
                    <!-- /.card-body -->
                </div>
                <!-- /.card -->
            </div>
            <!-- ./col -->

      ");
            WriteLiteral(@"  </div>

        <div class=""row"">
            <div class=""col"">
                <div class=""card"">
                    <div class=""card-header"">
                        <h3 class=""card-title"">
                            <i class=""fa fa-file""></i>
                            Units and Unit Content
                        </h3>
                       
                    </div>
                    <!-- /.card-header -->
                    <div class=""card-body"">
                        <dl>

                            <dt>
                                1.
                                Argument Analysis
                            </dt>
                            <dt>teaching hours: 6 hrs</dt>
                            <dd><p>1.1. Concept of Logic, Proposition and Arguments, Recognizing Arguments, Arguments vs Explanations, Validity and Truth, Deductive and Inductive Arguments</p><p>1.2. Paraphrasing Arguments, Diagramming Arguments, Complex Argumentative Passages, Problems in Re");
            WriteLiteral(@"asoning</p></dd>

                            <dt>
                                2.
                                Categorical Propositions and Syllogisms
                            </dt>
                            <dt>teaching hours: 10 hrs</dt>
                            <dd><p>2.1. Theory of Deduction, Classes of Categorical Propositions, Types Categorical Propositions, Quality, Quantity and Distribution, Square of Oppositions, Immediate Inferences, Venn Diagrams of Categorical Propositions.</p><p>2.2. Standard form of Categorical Syllogism, Mood and Figure, Testing Validity by Using Venn Diagrams, Syllogistic Rules and Fallacies</p><p>2.3. Syllogistic Arguments, Reducing Number of Terms, Translating Categorical Propositions into Standard Form, Enthymemes and Sorites</p></dd>

                            <dt>
                                3.
                                Symbolic Logic
                            </dt>
                            <dt>teaching hours: 12 hrs</dt>
    ");
            WriteLiteral(@"                        <dd><p>3.1. Modern Logic and Symbolic Language, Conjunction, Disjunction, negation, Material Implication, Material Equivalence</p><p>3.2. Argument Forms and Refutation by Analogy, Testing Validity of Arguments by using Truth Tables, Statement Forms, Logical Equivalences</p><p>3.3. Valid Argument Forms, Formal Proof of Validity, Replacement Rules, Proof of Invalidity, Inconsistency</p></dd>

                            <dt>
                                4.
                                Quantification Theory
                            </dt>
                            <dt>teaching hours: 6 hrs</dt>
                            <dd><p>4.1. Need of Quantification, Singular Propositions, Types of Quantifiers, Representing Categorical Propositions in Quantification Theory</p><p>4.2. Generalization and Instantiation, Proving Validity, Proving Invalidity</p></dd>

                            <dt>
                                5.
                                Fallacies
     ");
            WriteLiteral(@"                       </dt>
                            <dt>teaching hours: 6 hrs</dt>
                            <dd><p>5.1. Concept and Classification of Fallacies, Fallacies of Relevance, Fallacies of Deductive Induction, Fallacies of Presumption, Fallacies of Ambiguity</p></dd>

                            <dt>
                                6.
                                Analogical and Casual Reasoning
                            </dt>
                            <dt>teaching hours: 5 hrs</dt>
                            <dd><p>6.1. Review of Induction and Deduction, Arguments by Analogy, Analogical</p><p>Arguments, Refutation by Logical Analogy</p><p>6.2. Cause and Effect, Casual Laws, Induction by Enumeration, Casual Analysis</p><p>Methods, Limitations of Inductive Arguments</p></dd>

                        </dl>
                    </div>
                    <!-- /.card-body -->
                </div>
                <!-- /.card -->
            </div>
            <!-- ./col --");
            WriteLiteral(@">

        </div>

        <div class=""row"">
            <div class=""col"">
                <div class=""card"">
                    <div class=""card-header"">
                        <h3 class=""card-title"">
                            <i class=""fa fa-desktop""></i>
                            <i class=""fa fa-flask""></i>
                            Lab and Practical works
                        </h3>
                     
                    </div>
                    <!-- /.card-header -->
                    <div class=""card-body"">
                        <p><b>Laboratory Works:</b></p><p>The laboratory work includes realizing representation techniques and makes proper</p><p>inferences. Student should be able to</p><ul><li>Represent complex argumentative Passages by using Symbolic Logic<br></li><li>Generate proper reasoning and inferences to reach to the conclusion<br></li></ul>
                    </div>
                    <!-- /.card-body -->
                </div>
                <!-- /");
            WriteLiteral(".card -->\r\n            </div>\r\n            <!-- ./col -->\r\n\r\n        </div>\r\n\r\n\r\n\r\n    </div>\r\n");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
