#pragma checksum "C:\Users\admin\Desktop\Easy CSIT\Views\Course\SE.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "4d7c27a6adb28b734997949cd332826abaf6d92f"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Course_SE), @"mvc.1.0.view", @"/Views/Course/SE.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Users\admin\Desktop\Easy CSIT\Views\_ViewImports.cshtml"
using EasyCSIT;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\admin\Desktop\Easy CSIT\Views\_ViewImports.cshtml"
using EasyCSIT.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"4d7c27a6adb28b734997949cd332826abaf6d92f", @"/Views/Course/SE.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"c841dc2f78dc3024c0f2f0360efb9bebdc1dbcee", @"/Views/_ViewImports.cshtml")]
    public class Views_Course_SE : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("asp-controller", "Course", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("asp-action", "SE", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString(" btn btn-info"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("asp-action", "SEnote", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_4 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString(" btn btn-outline-info"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral(@"



    <div class=""terms"">
        <main>

            <div class=""row no-gutters"">
                <div class=""col"" style=""margin-bottom: 1%; text-align: center;"">
                    <h1 style=""margin-top: 1%;"" class=""text-center"">Software Engineering Syllabus</h1>
                    ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("a", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "4d7c27a6adb28b734997949cd332826abaf6d92f4914", async() => {
                WriteLiteral("Syllabus");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper.Controller = (string)__tagHelperAttribute_0.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_0);
            __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper.Action = (string)__tagHelperAttribute_1.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_1);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n                    ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("a", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "4d7c27a6adb28b734997949cd332826abaf6d92f6380", async() => {
                WriteLiteral("Notes");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper.Controller = (string)__tagHelperAttribute_0.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_0);
            __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper.Action = (string)__tagHelperAttribute_3.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_3);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_4);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"



                </div>
            </div>



            <div class=""card col-xl-6 col-lg-6 col-md-6 col-sm-12"">


                <div class=""card-body p-0"">
                    <table class=""table table-sm"">

                        <tbody>
                            <tr>
                                <td>Title</td>

                                <td>
                                    Software Engineering
                                </td>
                            </tr>
                            <tr>
                                <td>Course code</td>

                                <td>CSC364</td>
                            </tr>
                            <tr>
                                <td>Nature of course</td>

                                <td>Theory</td>
                            </tr>
                            <tr>
                                <td>Semester</td>

                                <td>Sixth-Semester</td>
          ");
            WriteLiteral(@"                  </tr>
                            <tr>
                                <td>Full marks</td>

                                <td>80+20</td>
                            </tr>
                            <tr>
                                <td>Pass marks</td>

                                <td>24+8</td>
                            </tr>
                            <tr>
                                <td>Credit Hrs</td>

                                <td>3</td>
                            </tr>
                            <tr>
                                <td>Elective/Compulsary</td>

                                <td>Compulsary</td>

                            </tr>

                        </tbody>
                    </table>
                </div>

            </div>



            <div class=""row"">
                <div class=""col"">
                    <div class=""card"">
                        <div class=""card-header"">
                         ");
            WriteLiteral(@"   <h3 class=""card-title"">
                                <i class=""fa fa-book""></i>
                                Course Description
                            </h3>
                           
                        </div>
                        <!-- /.card-header -->
                        <div class=""card-body"">
                            <p><b>Course Description:</b></p><p>This course familiarizes students with different concepts of software engineering mainly focusing on software process models, agile development, requirements engineering, models, design, implementation, testing, evolution, and software project management.</p><p><b>Course Objectives:</b></p><p>The main objective of this course is to provide knowledge of different concepts of software engineering so that students will be able to develop high quality software using different software management skills.</p>
                        </div>
                        <!-- /.card-body -->
                    </div>
           ");
            WriteLiteral(@"         <!-- /.card -->
                </div>
                <!-- ./col -->

            </div>

            <div class=""row"">
                <div class=""col"">
                    <div class=""card"">
                        <div class=""card-header"">
                            <h3 class=""card-title"">
                                <i class=""fa fa-file""></i>
                                Units and Unit Content
                            </h3>
                            
                        </div>
                        <!-- /.card-header -->
                        <div class=""card-body"">
                            <dl>

                                <dt>
                                    1.
                                    Introduction
                                </dt>
                                <dt>Teaching Hours: 2 hrs</dt>
                                <dd><p>Software and its Types; Attributes of Good Software; Software Engineering and its Importance");
            WriteLiteral(@"; Fundamental Software Engineering Activities; Difference between Software Engineering and Computer Science; Difference between Software Engineering and System Engineering; Challenges and Cost of Software Engineering; Professional Software Development; Software Engineering Diversity; Internet Software Engineering; Software Engineering Ethics</p></dd>

                                <dt>
                                    2.
                                    Software Processes
                                </dt>
                                <dt>Teaching Hours: 5 hrs</dt>
                                <dd><p>Software Process; Software Process Models (Waterfall Model; Incremental Development; Integration and Configuration); Software Process Activities (Software Specification, Software Design and Implementation; Software Validation; Software Evolution); Coping with Change (Prototyping, Incremental Delivery); Process Improvement</p></dd>

                                <dt>
                  ");
            WriteLiteral(@"                  3.
                                    Agile Software Development
                                </dt>
                                <dt>Teaching Hours: 3 hrs</dt>
                                <dd><p>Agile Development; Plan-Driven vs. Agile Development; Agile Methods; Agile Development Techniques; Introduction to Agile Project Management</p></dd>

                                <dt>
                                    4.
                                    Requirements Engineering
                                </dt>
                                <dt>Teaching Hours: 3 hrs</dt>
                                <dd><p>Concept of User and System Requirements; Functional and Non-Functional Requirements; Requirements Engineering Process; Requirements Elicitation; Requirements Specification; Requirements Validation; Requirements Change</p></dd>

                                <dt>
                                    5.
                                    System Modeling
 ");
            WriteLiteral(@"                               </dt>
                                <dt>Teaching Hours: 6 hrs</dt>
                                <dd><p>Introduction to System Modeling; Context Models; Interaction Models; Structural Models; Behavioral Models; Model-Driven Architecture</p></dd>

                                <dt>
                                    6.
                                    Architectural Design
                                </dt>
                                <dt>Teaching Hours: 6 hrs</dt>
                                <dd><p>Introduction; Architectural Design Decisions; Architectural Views; Architectural Patterns; Application Architectures</p></dd>

                                <dt>
                                    7.
                                    Design and Implementation
                                </dt>
                                <dt>Teaching Hours: 5 hrs</dt>
                                <dd><p>Introduction; Object-Oriented Design using UML; ");
            WriteLiteral(@"Design Patterns; Implementation Issues; Open-Source Development</p></dd>

                                <dt>
                                    8.
                                    Software Testing
                                </dt>
                                <dt>Teaching Hours: 5 hrs</dt>
                                <dd><p>Introduction; Validation and Verification Testing; Software Inspection; Software Testing Process; Development Testing; Test-Driven Development; Release Testing; User Testing</p></dd>

                                <dt>
                                    9.
                                    Software Evolution
                                </dt>
                                <dt>Teaching Hours: 3 hrs</dt>
                                <dd><p>Evolution Process; Legacy Systems; Software Maintenance<br></p></dd>

                                <dt>
                                    10.
                                    Software Management
    ");
            WriteLiteral(@"                            </dt>
                                <dt>Teaching Hours: 7 hrs</dt>
                                <dd><p>Software Project Management; Project Management Activities (Project Planning, Risk Management, People Management, Reporting and Proposal Writing); Project Planning (Software Pricing, Plan-Driven Development, Project Scheduling, Estimation Techniques, COCOMO Cost Modeling); Introduction to Quality Management and Configuration Management</p></dd>

                            </dl>
                        </div>
                        <!-- /.card-body -->
                    </div>
                    <!-- /.card -->
                </div>
                <!-- ./col -->

            </div>

            <div class=""row"">
                <div class=""col"">
                    <div class=""card"">
                        <div class=""card-header"">
                            <h3 class=""card-title"">
                                <i class=""fa fa-desktop""></i>
     ");
            WriteLiteral(@"                           <i class=""fa fa-flask""></i>
                                Lab and Practical works
                            </h3>
                           
                        </div>
                        <!-- /.card-header -->
                        <div class=""card-body"">
                            <p><b>Laboratory / Project Work:</b></p><p>Students should prepare a project report along with software product using different concepts of software engineering. The project can be done in groups with at most four members in each group using any suitable database, programming, interfacing technologies, and project management concepts.</p>
                        </div>
                        <!-- /.card-body -->
                    </div>
                    <!-- /.card -->
                </div>
                <!-- ./col -->

            </div>
            </main>


    </div>
");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
