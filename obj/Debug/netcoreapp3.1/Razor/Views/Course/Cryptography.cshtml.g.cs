#pragma checksum "C:\Users\admin\Desktop\Easy CSIT\Views\Course\Cryptography.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "1ed0b1181f3e7469efeecec01c5fc485f6a52dcb"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Course_Cryptography), @"mvc.1.0.view", @"/Views/Course/Cryptography.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Users\admin\Desktop\Easy CSIT\Views\_ViewImports.cshtml"
using EasyCSIT;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\admin\Desktop\Easy CSIT\Views\_ViewImports.cshtml"
using EasyCSIT.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"1ed0b1181f3e7469efeecec01c5fc485f6a52dcb", @"/Views/Course/Cryptography.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"c841dc2f78dc3024c0f2f0360efb9bebdc1dbcee", @"/Views/_ViewImports.cshtml")]
    public class Views_Course_Cryptography : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral(@"<div class=""terms"">
  

        <p>This page contains Syllabus of Cryptography of CSIT. </p>

        <div class=""row no-gutters"">

        </div>


        <div class=""card col-xl-6 col-lg-6 col-md-6 col-sm-12"">


            <div class=""card-body p-0"">
                <table class=""table table-sm"">

                    <tbody>
                        <tr>
                            <td>Title</td>

                            <td>
                                Cryptography
                            </td>
                        </tr>
                        <tr>
                            <td>Course code</td>

                            <td>CSC316</td>
                        </tr>
                        <tr>
                            <td>Nature of course</td>

                            <td>Theory + Lab</td>
                        </tr>
                        <tr>
                            <td>Semester</td>

                            <td>Fifth-Semester</");
            WriteLiteral(@"td>
                        </tr>
                        <tr>
                            <td>Full marks</td>

                            <td>60 + 20 + 20</td>
                        </tr>
                        <tr>
                            <td>Pass marks</td>

                            <td>24 + 8 + 8</td>
                        </tr>
                        <tr>
                            <td>Credit Hrs</td>

                            <td>3</td>
                        </tr>
                        <tr>
                            <td>Elective/Compulsary</td>

                            <td>Compulsary</td>

                        </tr>

                    </tbody>
                </table>
            </div>

        </div>



        <div class=""row"">
            <div class=""col"">
                <div class=""card"">
                    <div class=""card-header"">
                        <h3 class=""card-title"">
                            <i class=""fa fa-book");
            WriteLiteral(@"""></i>
                            Course Description
                        </h3>
                      
                    </div>
                    <!-- /.card-header -->
                    <div class=""card-body"">
                        <p>
                            <b>Course Description:</b> The course introduces the underlying the principles and design of
                            cryptosystems. The course covers the basics concepts of cryptography including: traditional ciphers,
                            block ciphers, stream ciphers, public and private key cryptosystems. The course also includes the
                            theory of hash functions, authentication systems, network security protocols and malicious logic.
                        </p><p>
                            <b>
                                Course Objectives:
                            </b> The objectives of this course are to familiarize the students with cryptography
                            a");
            WriteLiteral(@"nd its applications. The students will be able to develop basic understanding of cryptographic
                            mechanisms.
                        </p>
                    </div>
                    <!-- /.card-body -->
                </div>
                <!-- /.card -->
            </div>
            <!-- ./col -->

        </div>

        <div class=""row"">
            <div class=""col"">
                <div class=""card"">
                    <div class=""card-header"">
                        <h3 class=""card-title"">
                            <i class=""fa fa-file""></i>
                            Units and Unit Content
                        </h3>
                      
                    </div>
                    <!-- /.card-header -->
                    <div class=""card-body"">
                        <dl>

                            <dt>
                                1.
                                Introduction and Classical Ciphers
                      ");
            WriteLiteral(@"      </dt>
                            <dt>Teaching Hours: 7 hrs</dt>
                            <dd><p>1.4. Security: Computer Security, Information Security, Network Security, CIA Triad,</p><p>Cryptography, Cryptosystem, Cryptanalysis, Security Threats and Attacks, Security Services,</p><p>Security Mechanisms</p><p>1.5. Classical Cryptosystems:</p><p>Substitution Techniques: Ceasar, Monoalphabetic, Playfair, Hill, Polyalphabetic ciphers,</p><p>One-time pad</p><p>Transposition Techniques: Rail Fence Cipher</p><p>1.6. Modern Ciphers: Block vs. Stream Ciphers, Symmetric vs. Asymmetric Ciphers</p><div><br></div></dd>

                            <dt>
                                2.
                                Symmetric Ciphers
                            </dt>
                            <dt>Teaching Hours: 10 hrs</dt>
                            <dd><p>2.4. Fiestel Cipher Structure, Substitution Permutation Network (SPN)</p><p>2.5. Data Encryption Standards (DES), Double DES, Triple DES</p><p");
            WriteLiteral(@">2.6. Finite Fields: Groups Rings, Fields, Modular Arithmetic, Euclidean Algorithm, Galois Fields</p><p>(GF(p) &amp; GF(2n)), Polynomial Arithmetic</p><p>2.7. International Data Encryption Standard (IDEA)</p><p>2.8. Advanced Encryption Standards (AES) Cipher</p><p>2.9. Modes of Block Cipher Encryptions (Electronic Code Book, Cipher Block Chaining, Cipher</p><p>Feedback Mode, Output Feedback Mode, Counter Mode)</p><div><br></div></dd>

                            <dt>
                                3.
                                Asymmetric Ciphers
                            </dt>
                            <dt>Teaching Hours: 8 hrs</dt>
                            <dd><p>3.4. Number Theory: Prime Numbers, Fermat’s Theorem, Euler’s Theorem, Primility Testing,</p><p>Miller-Rabin Algorithm, Extended Euclidean Theorem, Discrete Logarithms</p><p>3.5. Public Key Cryptosystems, Applications of Public Key Cryptosystems</p><p>3.6. Distribution of public key, Distribution of secret key by using public key ");
            WriteLiteral(@"cryptography, Diffie-</p><p>Helman Key Exchange, Man-in-the-Middle Attack</p><p>3.7. RSA Algorithm</p><p>3.8. Elgamal Cryptographic System</p><div><br></div></dd>

                            <dt>
                                4.
                                Cryptographic Hash Functions and Digital Signature
                            </dt>
                            <dt>Teaching Hours: 8 hrs</dt>
                            <dd><p>4.4. Message Authentication, Message Authentication Functions, Message Authentication Codes</p><p>4.5. Hash Functions, Properties of Hash functions, Applications of Hash Functions</p><p>4.6. Message Digests: MD4 and MD5</p><p>4.7. Secure Hash Algorithms: SHA-1 and SHA-2</p><div><div>4.8. Digital Signatures: Direct Digital Signatures, Arbitrated Digital Signature</div><div><br></div><div>4.9. Digital Signature Standard: The DSS Approach, Digital Signature Algorithm</div><div><br></div><div>4.10. Digital Signature Standard: The RSA Approach</div></div><div><br></div></d");
            WriteLiteral(@"d>

                            <dt>
                                5.
                                Authentication
                            </dt>
                            <dt>Teaching Hours: 3 hrs</dt>
                            <dd><p>5.4. Authentication System,</p><p>5.5. Password Based Authentication, Dictionary Attacks,</p><p>5.6. Challenge Response System,</p><p>5.7. Biometric System</p><p>5.8. Needham-Schroeder Scheme, Kerberos Protocol</p><div><br></div></dd>

                            <dt>
                                6.
                                Network Security and Public Key Infrastructure
                            </dt>
                            <dt>Teaching Hours: 6 hrs</dt>
                            <dd><p>6.1. Overview of Network Security</p><p>6.2. Digital Certificates and X.509 certificates, Certificate Life Cycle Management</p><p>6.3. PKI trust models, PKIX</p><p>6.4. Email Security: Pretty Good Privacy (PGP)</p><p>6.5. Secure Socket Layer (SSL) and ");
            WriteLiteral(@"Transport Layer Security (TLS)</p><p>6.6. IP Security (IPSec)</p><p>6.7. Firewalls and their types</p><div><br></div></dd>

                            <dt>
                                6.
                                Malicious Logic
                            </dt>
                            <dt>Teaching Hours: 3 hrs</dt>
                            <dd><p>7.1. Malicious Logic, Types of Malicious Logic: Virus, Worm, Trojan Horse, Zombies, Denial of</p><p>Service Attacks,</p><p>7.2. Intrusion, Intruders and their types, Intrusion Detection System</p><div><br></div></dd>

                        </dl>
                    </div>
                    <!-- /.card-body -->
                </div>
                <!-- /.card -->
            </div>
            <!-- ./col -->

        </div>

        <div class=""row"">
            <div class=""col"">
                <div class=""card"">
                    <div class=""card-header"">
                        <h3 class=""card-title"">
             ");
            WriteLiteral(@"               <i class=""fa fa-desktop""></i>
                            <i class=""fa fa-flask""></i>
                            Lab and Practical works
                        </h3>
                        
                    </div>
                    <!-- /.card-header -->
                    <div class=""card-body"">
                        <ul><li><div");
            BeginWriteAttribute("style", " style=\"", 9712, "\"", 9720, 0);
            EndWriteAttribute();
            WriteLiteral("><b>Laboratory Work Manual</b></div><div");
            BeginWriteAttribute("style", " style=\"", 9761, "\"", 9769, 0);
            EndWriteAttribute();
            WriteLiteral(">Student should write programs and prepare lab sheet for all of theunits in the syllabus. Students</div><div");
            BeginWriteAttribute("style", " style=\"", 9878, "\"", 9886, 0);
            EndWriteAttribute();
            WriteLiteral(">should implement cryptographic algorithmsand protocols mentioned in each. The choice of</div><div");
            BeginWriteAttribute("style", " style=\"", 9985, "\"", 9993, 0);
            EndWriteAttribute();
            WriteLiteral(">programming language can be decided by the instructor and student as per their comfort. The</div><div");
            BeginWriteAttribute("style", " style=\"", 10096, "\"", 10104, 0);
            EndWriteAttribute();
            WriteLiteral(">instructors have to prepare lab sheets for individual units covering the concept of the units as per the</div><div");
            BeginWriteAttribute("style", " style=\"", 10220, "\"", 10228, 0);
            EndWriteAttribute();
            WriteLiteral(">requirement. All of the lab reports should be evaluated during the corresponding weeks of hands on</div><div");
            BeginWriteAttribute("style", " style=\"", 10338, "\"", 10346, 0);
            EndWriteAttribute();
            WriteLiteral(">practice. The lab session for above chapters should be as per following description however the</div><div");
            BeginWriteAttribute("style", " style=\"", 10453, "\"", 10461, 0);
            EndWriteAttribute();
            WriteLiteral(">depth of lab works are not limited to the below mentioned contents only. The lab report might cover</div><div");
            BeginWriteAttribute("style", " style=\"", 10572, "\"", 10580, 0);
            EndWriteAttribute();
            WriteLiteral(">the following list of the programs.</div><div");
            BeginWriteAttribute("style", " style=\"", 10627, "\"", 10635, 0);
            EndWriteAttribute();
            WriteLiteral(">Write the program to illustrate the followings</div><div");
            BeginWriteAttribute("style", " style=\"", 10693, "\"", 10701, 0);
            EndWriteAttribute();
            WriteLiteral(@"><br></div><ul><li>Monoalphabetic Ciphers: Ceasar, Hill</li><li>Polyalphabetic Cipher: Vigenere Cipher (Vernam, OTP), Playfair</li><li>Transposition Cipher: Rail Fence Cipher</li><li>Some basic components of DES like functioning of S-Box, Key generation</li><li>Modular Arithmetic (Finding additive inverse, multiplicative inverse (Extended Euclidean algorithm, relatively prime)</li><li>Number Theory (Primality testing, Totient function, Primitive root)</li><li>Diffie-Helman Key Exchange, RSA Algorithm, Elgamal Cryptographic System</li><li>Some basic logic for Malicious code</li></ul></li></ul>
                    </div>
                    <!-- /.card-body -->
                </div>
                <!-- /.card -->
            </div>
            <!-- ./col -->

        </div>



    </div>
");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
