#pragma checksum "C:\Users\admin\Desktop\Easy CSIT\Views\Course\DSD.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "e2c00bbc01a866c5aa3020f10cf1b091d96724f1"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Course_DSD), @"mvc.1.0.view", @"/Views/Course/DSD.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Users\admin\Desktop\Easy CSIT\Views\_ViewImports.cshtml"
using EasyCSIT;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\admin\Desktop\Easy CSIT\Views\_ViewImports.cshtml"
using EasyCSIT.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"e2c00bbc01a866c5aa3020f10cf1b091d96724f1", @"/Views/Course/DSD.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"c841dc2f78dc3024c0f2f0360efb9bebdc1dbcee", @"/Views/_ViewImports.cshtml")]
    public class Views_Course_DSD : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral(@"<div class=""TERMS"">

    <p>This page contains Syllabus of Digital System Design of CSIT. </p>




    <div class=""card col-xl-6 col-lg-6 col-md-6 col-sm-12"">


        <div class=""card-body p-0"">
            <table class=""table table-sm"">

                <tbody>
                    <tr>
                        <td>Title</td>

                        <td>
                            Digital System Design
                        </td>
                    </tr>
                    <tr>
                        <td>Course code</td>

                        <td> CSC417</td>
                    </tr>
                    <tr>
                        <td>Nature of course</td>

                        <td>Theory</td>
                    </tr>
                    <tr>
                        <td>Semester</td>

                        <td>Seventh-Semester</td>
                    </tr>
                    <tr>
                        <td>Full Marks</td>

                        <t");
            WriteLiteral(@"d>60 + 20+20 </td>
                    </tr>
                    <tr>
                        <td>Pass marks</td>

                        <td>32 + 8 </td>
                    </tr>
                    <tr>
                        <td>Credit Hrs</td>

                        <td>3</td>
                    </tr>
                    <tr>
                        <td>Elective/Compulsary</td>

                        <td>Elective</td>

                    </tr>

                </tbody>
            </table>
        </div>

    </div>



    <div class=""row"">
        <div class=""col"">
            <div class=""card"">
                <div class=""card-header"">
                    <h3 class=""card-title"">
                        <i class=""fa fa-sticky-note""></i>
                        Course
                    </h3>

                </div>
                <!-- /.card-header -->
                <div class=""card-body"">
                    <p>
                        <b>Course Descr");
            WriteLiteral(@"iption:</b>This course contains the introductory part of combinational Logic along with the clear concepts
                        of K-Maps and Quine- Mc Cluskey Method. It also introduces sequential networks with flip
                        flops and FSM. Another concept includes FPGA and VHDL and also testing and verification.

                    </p><p><br></p><p>
                        <b>Course Objectives:</b> The course objective is to provide ample knowledge on digital design process and to enhance the
                        knowledge of hardware design in real scenarios.
                    </p><div><br></div>
                </div>
                <!-- /.card-body -->
            </div>
            <!-- /.card -->
        </div>
        <!-- ./col -->

    </div>

    <div class=""row"">
        <div class=""col"">
            <div class=""card"">
                <div class=""card-header"">
                    <h3 class=""card-title"">
                        <i class=""fa fa-file""></");
            WriteLiteral(@"i>
                        Units and Unit Content
                    </h3>

                </div>
                <!-- /.card-header -->
                <div class=""card-body"">
                    <dl>

                        <dt>
                            Unit 1

                        </dt>
                        <dt>Teaching Hours: 5 hrs</dt>
                        <dd>
                            <p>
                                ntroduction of logic design, Digital System and Integration, Electronic
                                Design Automation, IC Manufacturing, Logic Families, IC Design
                                Techniques, IC characteristics: fan-out, power dissipation, propagation
                                delay, and noise margin of TTL and CMOS integrated circuit logic devices
                            </p><div><br></div>
                        </dd>

                        <dt>
                            Unit 2

                        </dt>");
            WriteLiteral(@"
                        <dt>Teaching Hours: 4 hrs</dt>
                        <dd>
                            <p>
                                Definition, characteristics, and principles of management. Process and functions of
                                Review of Boolean Algebra and Combinational Logic, Canonical Form,
                                Shannon's Expansion, Minterms, Maxterms, Prime Implication
                            </p><div><br></div>
                        </dd>

                        <dt>
                            Unit 3

                        </dt>
                        <dt>Teaching Hours: 5 hrs</dt>
                        <dd>
                            <p>
                                Combinational Network Design: K – Map, Synthesis and Minimization
                                with K – Maps (AND – OR, OR-AND, NAND-NAND, NOR-NOR),
                                Standard Combinational Networks
                            </p><div><br></d");
            WriteLiteral(@"iv>
                        </dd>

                        <dt>
                            Unit 4

                        </dt>
                        <dt>Teaching Hours: 7 hrs</dt>
                        <dd>
                            <p>
                                Quine- Mc Cluskey Method, Minimization of Boolean expression with
                                Quine-Mc Cluskey method, PROMs and EPROMs, Programmable Array
                                Logic (PAL), Programmed Logic Array (PLA), Gate Arrays, Programmable
                                Gate Array, Full Custom Design
                            </p><div><br></div>
                        </dd>

                        <dt>
                            Unit 5

                        </dt>
                        <dt>Teaching Hours: 8 hrs</dt>
                        <dd>
                            <p>
                                Sequential Networks: Transition from combinational to sequential network,
 ");
            WriteLiteral(@"                               Direct command flip flop, Initialization of sequential network, Level
                                Enabled Flip-Flops, Synchronization of sequential networks, Edge-triggered
                                Flip Flops, Synchronous and Asynchronous Signals
                            </p><div><br></div>
                        </dd>

                        <dt>
                            Unit 6

                        </dt>
                        <dt>Teaching Hours: 6 hrs</dt>
                        <dd>
                            <p>
                                Sequential Networks as Finite State Machines: Standard Models,
                                Realization with ASM Diagrams, Synthesis of Synchronous FSM, Time
                                6 Hrs.117
                                Behavior of Synchronous FSM, Design of input forming, Logic and Output
                                Forming Logic of state machine.
                         ");
            WriteLiteral(@"   </p><div><br></div>
                        </dd>

                        <dt>
                            Unit 7

                        </dt>
                        <dt>Teaching Hours:4 hrs</dt>
                        <dd>
                            <p>
                                Field Programmable Gate Arrays (FPGA), VHDL and its use in
                                programmable logic devices (PLDs) like FPGA
                            </p><div><br></div>
                        </dd>

                        <dt>
                            Unit 8
                        </dt>
                        <dt>Teaching Hours:6 hrs</dt>
                        <dd>
                            <p>
                                Testing and Verification, Testing Logic Circuits, Combinational gate
                                testing, Combinational network testing, Sequential Testing, Test vector
                                generation, fault, fault model and fault dete");
            WriteLiteral(@"ction, SA0, SA1, Design for
                                Testability

                            </p><div><br></div>
                        </dd>



                    </dl>
                </div>
                <!-- /.card-body -->
            </div>
            <!-- /.card -->
        </div>
        <!-- ./col -->

    </div>


    <div class=""row"">
        <div class=""col"">
            <div class=""card"">
                <div class=""card-header"">
                    <h3 class=""card-title"">
                        <i class=""fa fa-desktop""></i>
                        <i class=""fa fa-flask""></i>
                        Lab and Project works
                    </h3>

                </div>
                <!-- /.card-header -->
                <div class=""card-body"">
                    <p><b>Laboratory Works:</b></p><p>
                        Laboratory Exercise should cover the implementation of combinational and sequential circuits,
                        FSM, FPG");
            WriteLiteral(@"A and VHDL. Testing and verification of circuits.
                    </p><div><br></div>
                </div>
                <div class=""card-body"">
                    <p><b>Project Works:</b></p><p>
    Design a sample of tool kit by using the design concepts of the course
</p><div><br></div>
                </div>
                <!-- /.card-body -->
            </div>
            <!-- /.card -->
        </div>
        <!-- ./col -->

    </div>

    <div class=""row"">
        <div class=""col"">
            <div class=""card"">
                <div class=""card-header"">
                    <h3 class=""card-title"">
                        <i class=""fa fa-book""></i>
                        Reference Books
                    </h3>

                </div>
                <!-- /.card-header -->
                <div class=""card-body"">
                    <p>

                        <br />1. Giuliano Donzellini, Luca Oneto, Domenico Ponta, Davide Anguita, Introduction to
           ");
            WriteLiteral(@"             Digital System Design, Springer
                        <br /> 2.Wolf, Wayne, Modern VLSI Design-System on Silicon, Third Edition, Pearson

                        <br />3. Comer, David J. Digital Logic State Machine Design, Third Edition, Oxford University
                        Press
                        <br />4. Ashenden, Peter J, The Student's Guide to VHDL, Morgan Kaufman
                    </p>

                </div>
                <!-- /.card-body -->
            </div>
            <!-- /.card -->
        </div>
        <!-- ./col -->

    </div>


</div>");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
