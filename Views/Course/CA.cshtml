@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
}
<div class="terms">
   

        <p>This page contains Syllabus of Computer Architecture of CSIT. </p>

        <div class="row no-gutters">

        </div>


        <div class="card col-xl-6 col-lg-6 col-md-6 col-sm-12">


            <div class="card-body p-0">
                <table class="table table-sm">

                    <tbody>
                        <tr>
                            <td>Title</td>

                            <td>
                                Computer Architecture
                            </td>
                        </tr>
                        <tr>
                            <td>Course code</td>

                            <td>CSC208</td>
                        </tr>
                        <tr>
                            <td>Nature of course</td>

                            <td>Theory + Lab</td>
                        </tr>
                        <tr>
                            <td>Semester</td>

                            <td>third-semester</td>
                        </tr>
                        <tr>
                            <td>Full marks</td>

                            <td>60 + 20 + 20</td>
                        </tr>
                        <tr>
                            <td>Pass marks</td>

                            <td>24 + 8 + 8</td>
                        </tr>
                        <tr>
                            <td>Credit Hrs</td>

                            <td>3</td>
                        </tr>
                        <tr>
                            <td>Elective/Compulsary</td>

                            <td>Compulsary</td>

                        </tr>

                    </tbody>
                </table>
            </div>

        </div>



        <div class="row">
            <div class="col">
                <div class="card">
                    <div class="card-header">
                        <h3 class="card-title">
                            <i class="fa fa-book"></i>
                            Course Description
                        </h3>
                       
                    </div>
                    <!-- /.card-header -->
                    <div class="card-body">
                        <p><b>Course Description:</b> This course includes concepts of instruction set architecture,</p><p>organization or micro-architecture, and system architecture. The instruction set architecture</p><p>includes programmer’s abstraction of computer. The micro-architecture consist internal</p><p>representation of computers at register and functional unit level. The system architecture</p><p>includes organization of computers at the cache and bus level.</p><p>.</p><p><b>Course Objectives</b></p><ul><li>&nbsp;Discuss representation of data and algorithms used to perform operations on data</li><li>&nbsp;Demonstrate different operations in terms of Micro-operations</li><li>&nbsp;Explain architecture of basic computer and micro-programmed control unit</li><li>&nbsp;Understand and memory and I/O organization of a typical computer system</li><li>&nbsp;Demonstrate benefits of pipelined systems</li></ul><div><br></div>
                    </div>
                    <!-- /.card-body -->
                </div>
                <!-- /.card -->
            </div>
            <!-- ./col -->

        </div>

        <div class="row">
            <div class="col">
                <div class="card">
                    <div class="card-header">
                        <h3 class="card-title">
                            <i class="fa fa-file"></i>
                            Units and Unit Content
                        </h3>
                        
                    </div>
                    <!-- /.card-header -->
                    <div class="card-body">
                        <dl>

                            <dt>
                                1.
                                Data Representation
                            </dt>
                            <dt>teaching hours: 4 hrs</dt>
                            <dd><p>1.1. Data Representation: Binary Representation, BCD, Alphanumeric Representation,</p><p>Complements, Fixed Point representation, Representing Negative Numbers, Floating</p><p>Point Representation, Arithmetic with Complements, Overflow, Detecting Overflow</p><p>1.2. Other Binary Codes: Gray Code, self Complementing Code, Weighted Code, Excess-3</p><p>Code, EBCDIC</p><p>1.3. Error Detection Codes: Parity Bit, Odd Parity, Even parity, Parity Generator &amp; Checker</p><div><br></div></dd>

                            <dt>
                                2.
                                Register Transfer and Microoperations
                            </dt>
                            <dt>teaching hours: 5 hrs</dt>
                            <dd><p>2.1. Microoperation, Register Transfer Language, Register Transfer, Control Function</p><p>2.2. Arithmetic Microoperations: Binary Adder, Binary Adder-subtractor, Binary</p><p>Incrementer, Arithmetic Circuit</p><p>2.3. Logic Microoperations, Hardware Implementation, Applications of Logic</p><p>Microoperations.</p><p>2.4. Shift Microoperations: Logical Shift, Circular shift, Arithmetic Shift, Hardware</p><p>Implementation of Shifter.</p><div><br></div></dd>

                            <dt>
                                3.
                                Basic Computer Organization and Design
                            </dt>
                            <dt>teaching hours: 8 hrs</dt>
                            <dd><p>3.1. Instruction Code, Operation Code, Stored Program Concept</p><p>3.2. Registers and memory of Basic Computer, Common Bus System for Basic Computer.</p><p>3.3. Instruction Format, Instruction Set Completeness, Control Unit of Basic Computer, Control Timing Signals</p><div><div>3.4. Instruction Cycle of Basic computer, Determining Type of Instruction, Memory</div><div>Reference Instructions, Input-Output Instructions, Program Interrupt &amp; Interrupt Cycle.</div><div><br></div><div>3.5. Description and Flowchart of Basic Computer</div></div><div><br></div></dd>

                            <dt>
                                4.
                                Microprogrammed Control
                            </dt>
                            <dt>teaching hours: 4 hrs</dt>
                            <dd><p>4.1. Control Word, Microprogram, Control Memory, Control Address Register,</p><p>Sequencer</p><p>4.2. Address Sequencing, Conditional Branch, Mapping of Instructions, Subroutines,</p><p>Microinstruction Format, Symbolic Microinstructions</p><p>4.3. Design of Control Unit</p><div><br></div></dd>

                            <dt>
                                5.
                                Central Processing Unit
                            </dt>
                            <dt>teaching hours: 4 hrs</dt>
                            <dd><p>5.1. Major Components of CPU, CPU Organization</p><p>5.2. Instruction Formats, Addressing Modes, Data Transfer and manipulation, Program Control, Subroutine Call and Return, Types of Interrupt</p><p>5.3. RISC vs CISC, Pros and Cons of RISC and CISC, Overlapped Register Windows</p><div><br></div></dd>

                            <dt>
                                6.
                                Pipelining
                            </dt>
                            <dt>teaching hours: 6 hrs</dt>
                            <dd><p>6.1. Parallel Processing, Multiple Functional Units, Flynn’s Classification</p><p>6.2. Pipelining: Concept and Demonstration with Example, Speedup Equation, Floating</p><p>Point addition and Subtraction with Pipelining</p><p>6.3. Instruction Level Pipelining: Instruction Cycle, Three &amp; Four-Segment Instruction</p><p>Pipeline, Pipeline Conflicts and Solutions</p><p>6.4. Vector Processing, Applications, Vector Operations, Matrix Multiplication</p><div><br></div></dd>

                            <dt>
                                7.
                                Computer Arithmetic
                            </dt>
                            <dt>teaching hours: 6 hrs</dt>
                            <dd><p>7.1. Addition and Subtraction with Signed Magnitude Data, Addition and Subtraction with Signed 2’s Complement Data</p><p>7.2. Multiplication of Signed Magnitude Data, Booth Multiplication, Division of Signed magnitude Data, Divide Overflow</p><div><br></div></dd>

                            <dt>
                                8.
                                Input Output Organization
                            </dt>
                            <dt>teaching hours: 4 hrs</dt>
                            <dd><p>8.1. Input-Output Interface: I/O Bus and Interface Modules, I/O vs. Memory Bus, Isolated</p><p>vs. Memory-Mapped I/O</p><p>8.2. Asynchronous Data Transfer: Strobe, Handshaking</p><p>8.3. Modes of Transfer: Programmed I/O, Interrupt-Initiated I/O, Direct memory Access</p><p>8.4. Priority Interrupt: Polling, Daisy-Chaining, Parallel Priority Interrupt</p><p>8.5. Direct Memory Access, Input-Output Processor, DMA vs. IOP</p><div><br></div></dd>

                            <dt>
                                9.
                                Memory Organization
                            </dt>
                            <dt>teaching hours: 4 hrs</dt>
                            <dd><p>9.1 Memory Hierarchy, Main Memory, RAM and ROM Chips, Memory address Map,</p><p>Memory Connection to CPU, Auxiliary Memory (magnetic Disk, Magnetic Tape)</p><p>9.1 Associative Memory: Hardware Organization, Match Logic, Read Operation, Write</p><p>Operation</p><p>9.1 Cache Memory: Locality of Reference, Hit &amp; Miss Ratio, Mapping, Write Policies</p><div><br></div></dd>

                        </dl>
                    </div>
                    <!-- /.card-body -->
                </div>
                <!-- /.card -->
            </div>
            <!-- ./col -->

        </div>

        <div class="row">
            <div class="col">
                <div class="card">
                    <div class="card-header">
                        <h3 class="card-title">
                            <i class="fa fa-desktop"></i>
                            <i class="fa fa-flask"></i>
                            Lab and Practical works
                        </h3>
                      
                    </div>
                    <!-- /.card-header -->
                    <div class="card-body">
                        <p><b>Laboratory Work</b></p><p>Student should be able to implement and simulate the algorithms by using high level</p><p>languages like C/Matlab and/or VHDL/Verilog. Laboratory work must include following</p><p>exercises:</p><p>1 Laboratory work for familiarizing with the syntax, data types, and operators of</p><p>Verilog/VHDL</p><p>2 Design of n-bit 2’s complement adder/subtractor</p><p>3 Design of Overflow detector in signed number addition</p><p>4 Design of parity generator and parity checker</p><p>5 Design of encoder and decoders</p><p>6 Design of multiplexer</p><p>7 Design of registers and memory</p><p>8 Memory Mapping</p><p>9 Design of control unit</p><p>10 Design of ALU</p><p>11 Design of CPU</p><p>12 Simulation of 5 stage or 4 stage or 3 stage pipelining</p><p>13 Simulation of addition and subtraction of signed 2’s complement data</p><p>14 Simulation of multiplication and division algorithms</p><div><br></div>
                    </div>
                    <!-- /.card-body -->
                </div>
                <!-- /.card -->
            </div>
            <!-- ./col -->

        </div>



    </div>
