

@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
}
<div class="Teaching Hours">
 

        <p>This page contains Syllabus of Theory of Computation of CSIT. </p>

        <div class="row no-gutters">

        </div>


        <div class="card col-xl-6 col-lg-6 col-md-6 col-sm-12">


            <div class="card-body p-0">
                <table class="table table-sm">

                    <tbody>
                        <tr>
                            <td>Title</td>

                            <td>
                                Theory of Computation
                            </td>
                        </tr>
                        <tr>
                            <td>Course code</td>

                            <td>CSC257</td>
                        </tr>
                        <tr>
                            <td>Nature of course</td>

                            <td>Theory + Lab</td>
                        </tr>
                        <tr>
                            <td>Semester</td>

                            <td>Fourth-Semester</td>
                        </tr>
                        <tr>
                            <td>Full marks</td>

                            <td>60 + 20 + 20</td>
                        </tr>
                        <tr>
                            <td>Pass marks</td>

                            <td>24 + 8 + 8</td>
                        </tr>
                        <tr>
                            <td>Credit Hrs</td>

                            <td>3</td>
                        </tr>
                        <tr>
                            <td>Elective/Compulsary</td>

                            <td>Compulsary</td>

                        </tr>

                    </tbody>
                </table>
            </div>

        </div>



        <div class="row">
            <div class="col">
                <div class="card">
                    <div class="card-header">
                        <h3 class="card-title">
                            <i class="fa fa-book"></i>
                            Course Description
                        </h3>
                       
                    </div>
                    <!-- /.card-header -->
                    <div class="card-body">
                        <p><b>Course Description:</b> This course presents a study of Finite State Machines and their languages. It</p><p>covers the details of finite state automata, regular expressions, context free grammars. More, the</p><p>course includes design of the Push-down automata and Turing Machines. The course also includes</p><p>basics of undecidabilty and intractability.</p><p><b><br></b></p><p><b>Course Objectives: </b>The main objective of the course is to introduce concepts of the models of</p><p>computation and formal language approach to computation. The general objectives are to,</p><p>introduce concepts in automata theory and theory of computation, design different finite state</p><p>machines and grammars and recognizers for different formal languages, identify different formal</p><p>language classes and their relationships, and determine the decidability and intractability of</p><p>computational problems.</p><div><br></div>
                    </div>
                    <!-- /.card-body -->
                </div>
                <!-- /.card -->
            </div>
            <!-- ./col -->

        </div>

        <div class="row">
            <div class="col">
                <div class="card">
                    <div class="card-header">
                        <h3 class="card-title">
                            <i class="fa fa-file"></i>
                            Units and Unit Content
                        </h3>
                       
                    </div>
                    <!-- /.card-header -->
                    <div class="card-body">
                        <dl>

                            <dt>
                                1.
                                Basic Foundations
                            </dt>
                            <dt>Teaching Hours: 3 hrs</dt>
                            <dd><p>1.1. Review of Set Theory, Logic, Functions, Proofs</p><p>1.2. Automata, Computability and Complexity: Complexity Theory, Computability Theory,</p><p>Automata Theory</p><p>1.3. Basic concepts of Automata Theory: Alphabets, Power of Alphabet, Kleen Closure</p><p>Alphabet, Positive Closure of Alphabet, Strings, Empty String, Substring of a string,</p><p>Concatenation of strings, Languages, Empty Language</p><div><br></div></dd>

                            <dt>
                                2.
                                Introduction to Finite Automata
                            </dt>
                            <dt>Teaching Hours: 8 hrs</dt>
                            <dd><p>2.1 Introduction to Finite Automata, Introduction of Finite State Machine</p><p>2.2 Deterministic Finite Automata (DFA), Notations for DFA, Language of DFA, Extended</p><p>Transition Function of DFA Non-Deterministic Finite Automaton (NFA), Notations for</p><p>NFA, Language of NFA, Extended Transition</p><p>2.3 Equivalence of DFA and NFA, Subset-Construction</p><p>2.4 Method for reduction of NFA to DFA, Theorems for equivalence of Language accepted</p><p>by DFA and NFA</p><p>2.5 Finite Automaton with Epsilon Transition (ε - NFA), Notations for ε - NFA, Epsilon</p><p>Closure of a State, Extended Transition Function of ε – NFA, Removing Epsilon</p><p>Transition using the concept of Epsilon Closure, Equivalence of NFA and ε –NFA,</p><p>Equivalence of DFA and ε – NFA</p><p>2.6 Finite State Machines with output: Moore machine and Mealy Machines</p><div><br></div></dd>

                            <dt>
                                3.
                                Regular Expressions
                            </dt>
                            <dt>Teaching Hours: 6 hrs</dt>
                            <dd><p>3.1 Regular Expressions, Regular Operators, Regular Languages and their applications,</p><p>Algebraic Rules for Regular Expressions</p><p>3.2 Equivalence of Regular Expression and Finite Automata, Reduction of Regular</p><div><div>Expression to ε – NFA, Conversion of DFA to Regular Expression</div><div><br></div><div>3.3 Properties of Regular Languages, Pumping Lemma, Application of Pumping Lemma,</div><div>Closure Properties of Regular Languages over (Union, Intersection, Complement)</div><div>Minimization of Finite State Machines: Table Filling Algorithm</div></div><div><br></div></dd>

                            <dt>
                                4.
                                Context Free Grammar
                            </dt>
                            <dt>Teaching Hours: 9 hrs</dt>
                            <dd><p>4.1 Introduction to Context Free Grammar (CFG), Components of CFG, Use of CFG,</p><p>Context Free Language (CFL)</p><p>4.2 Types of derivations: Bottomup and Topdown approach, Leftmost and Rightmost,</p><p>Language of a grammar</p><p>4.3 Parse tree and its construction, Ambiguous grammar, Use of parse tree to show ambiguity</p><p>in grammar</p><p>4.4 Regular Grammars: Right Linear and Left Linear, Equivalence of regular grammar and</p><p>finite automata</p><p>4.5 Simplification of CFG: Removal of Useless symbols, Nullable Symbols, and Unit</p><p>Productions, Chomsky Normal Form (CNF), Greibach Normal Form (GNF), Backus-</p><p>Naur Form (BNF)</p><p>4.6 Context Sensitive Grammar, Chomsky Hierarchy Pumping Lemma for CFL, Application</p><p>of Pumping Lemma, Closure Properties of CFL</p><div><br></div></dd>

                            <dt>
                                5.
                                Push Down Automata
                            </dt>
                            <dt>teaching hours: 7 hrs</dt>
                            <dd><p>5.1 Introduction to Push Down Automata (PDA), Representation of PDA, Operations of</p><p>PDA, Move of a PDA, Instantaneous Description for PDA</p><p>5.2 Deterministic PDA, Non Deterministic PDA, Acceptance of strings by PDA, Language</p><p>of PDA</p><p>5.3 Construction of PDA by Final State , Construction of PDA by Empty Stack,</p><p>5.4 Conversion of PDA by Final State to PDA accepting by Empty Stack and vice-versa,</p><p>Conversion of CFG to PDA, Conversion of PDA to CFG</p><div><br></div></dd>

                            <dt>
                                6.
                                Turing Machines
                            </dt>
                            <dt>Teaching Hours 10 hrs</dt>
                            <dd><p>6.1 Introduction to Turing Machines (TM), Notations of Turing Machine, Language of a</p><p>Turing Machine, Instantaneous Description for Turing Machine, Acceptance of a string</p><p>by a Turing Machines</p><p>6.2 Turing Machine as a Language Recognizer, Turing Machine as a Computing Function,</p><p>Turing Machine with Storage in its State, Turing Machine as a enumerator of stings of a</p><p>language, Turing Machine as Subroutine</p><p>6.3 Turing Machine with Multiple Tracks, Turing Machine with Multiple Tapes, Equivalence</p><p>of Multitape-TM and Multitrack-TM, Non-Deterministic Turing Machines, Restricted</p><p>Turing Machines: With Semi-infinite Tape, Multistack Machines, Counter Machines</p><p>6.4 Curch Turing Thesis, Universal Turing Machine, Turing Machine and Computers,</p><p>Encoding of Turing Machine, Enumerating Binary Strings, Codes of Turing Machine,</p><p>Universal Turing Machine for encoding of Turing Machine</p><div><br></div></dd>

                            <dt>
                                7.
                                Undecidability and Intractability
                            </dt>
                            <dt>Teaching Hours: 5 hrs</dt>
                            <dd><p>7.1 Computational Complexity, Time and Space complexity of A Turing Machine,</p><p>Intractability</p><p>7.2 Complexity Classes, Problem and its types: Absract, Decision, Optimization</p><p>7.3 Reducibility, Turing Reducible, Circuit Satisfiability, Cook’s Theorem,</p><p>7.4 Undecidability, Undecidable Problems: Post’s Correspondence Problem, Halting</p><p>Problem and its proof, Undecidable Problem about Turing Machines</p><div><br></div></dd>

                        </dl>
                    </div>
                    <!-- /.card-body -->
                </div>
                <!-- /.card -->
            </div>
            <!-- ./col -->

        </div>

        <div class="row">
            <div class="col">
                <div class="card">
                    <div class="card-header">
                        <h3 class="card-title">
                            <i class="fa fa-desktop"></i>
                            <i class="fa fa-flask"></i>
                            Lab and Practical works
                        </h3>
                      
                    </div>
                    <!-- /.card-header -->
                    <div class="card-body">
                        <p><b>Laboratory Work Manual</b></p><p>Student should write programs and prepare lab sheets for most of the units in the syllabus. Majorly,</p><p>students should practice design and implementation of Finite State Machines viz. DFA, NFA, PDA,</p><p>and Turing Machine. Students are highly recommended to construct Tokenizers/ Lexical analyzer</p><p>over/for some language. The nature of programming can be decided by the instructor and students</p><p>as per their comfort. The instructors have to prepare lab sheets for individual unit covering the</p><p>concept of all units as per the requirement. The sample lab sessions can be as following</p><p>descriptions;</p><p><b>Unit I: Basic Foundations (5 Hrs)</b></p><p><b>-</b> Write programs for illustrating the concepts of Strings, Prefix, Suffix and Substring of a String.</p><p><b>Unit II &amp; III: Introduction to Finite Automata and Regular Expressions (14 Hrs)</b></p><p><b>-&nbsp;</b>Write programs for illustrating the concepts of</p><ul><li>&nbsp;Determinstic Finite Automata</li><li>&nbsp;Non-Deterministic Finite Automata</li></ul><p><b>-&nbsp;</b>Write programs for implementing Tokenizers like for valid C-identifiers, Keywords, e-mail&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; validators, phone number etc.</p><p><b>-&nbsp;</b>Write programs that implement NFA for text search.</p><p><b>-&nbsp;</b>Write programs for implementing regular expressions.</p><p><b>Unit IV &amp; V: Context Free Grammar and Push Down Automata (14 Hrs)</b></p><p><b>-&nbsp;</b>Write Program for simulation of Leftmost/Rightmost Derivations.<br></p><p><b>-&nbsp;</b>Write Program for Parse Tree Contruction.</p><p><b>-&nbsp;</b>Write programs for illustrating the concepts of context free grammar and its accptance using the&nbsp; &nbsp; concepts of Push Down Automata</p><ul><li>Acceptance by Final State</li><li> Acceptance by Empty Stack</li></ul><p><b>Unit VI: Turing Machines (12 Hrs)</b></p><p><b>-</b> Write programs for illustrating the concepts of Turing Machine as a Language Recognizer.<br></p><div><br></div>
                    </div>
                    <!-- /.card-body -->
                </div>
                <!-- /.card -->
            </div>
            <!-- ./col -->

        </div>



    </div>
