@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
}
<div class="terms">
 

       

 
        <main>

            <div class="row no-gutters">
                <div class="col" style="margin-bottom: 1%; text-align: center;">
                    <h1 style="margin-top: 1%;" class="text-center"> Compiler Design and Construction</h1>
                    <a asp-controller="Course" asp-action="CDC" class=" btn btn-info">Syllabus</a>
                    <a asp-controller="Course" asp-action="CDCnote" class=" btn btn-outline-info">Notes</a>



                </div>
            </div>


 


        <div class="card col-xl-6 col-lg-6 col-md-6 col-sm-12">


            <div class="card-body p-0">
                <table class="table table-sm">

                    <tbody>
                        <tr>
                            <td>Title</td>

                            <td>
                                Compiler Design and Construction
                            </td>
                        </tr>
                        <tr>
                            <td>Course code</td>

                            <td>CSC365</td>
                        </tr>
                        <tr>
                            <td>Nature of course</td>

                            <td>Theory</td>
                        </tr>
                        <tr>
                            <td>Semester</td>

                            <td>sixth-semester</td>
                        </tr>
                        <tr>
                            <td>Full marks</td>

                            <td>80+20</td>
                        </tr>
                        <tr>
                            <td>Pass marks</td>

                            <td>24+8</td>
                        </tr>
                        <tr>
                            <td>Credit Hrs</td>

                            <td>3</td>
                        </tr>
                        <tr>
                            <td>Elective/Compulsary</td>

                            <td>Compulsary</td>

                        </tr>

                    </tbody>
                </table>
            </div>

        </div>



        <div class="row">
            <div class="col">
                <div class="card">
                    <div class="card-header">
                        <h3 class="card-title">
                            <i class="fa fa-book"></i>
                            Course Description
                        </h3>
                       
                    </div>
                    <!-- /.card-header -->
                    <div class="card-body">
                        <p><b>Course Description:</b></p><p>This course is designed to develop acquaintance with fundamental concepts of compiler design. The course starts with the basic concepts and also includes different phases of compilers like lexical analysis, syntax analysis, syntax-directed translation, type checking etc. in detail.</p><p><b>Course Objectives:</b></p><ul><li>&nbsp;To develop knowledge in compiler design</li><li>&nbsp;To develop lexical analyzers, parsers, and small compilers using different tools</li><li>&nbsp;To develop lexical analyzers, parsers, and small compilers by using general purpose programming languages.</li></ul>
                    </div>
                    <!-- /.card-body -->
                </div>
                <!-- /.card -->
            </div>
            <!-- ./col -->

        </div>

        <div class="row">
            <div class="col">
                <div class="card">
                    <div class="card-header">
                        <h3 class="card-title">
                            <i class="fa fa-file"></i>
                            Units and Unit Content
                        </h3>
                       
                    </div>
                    <!-- /.card-header -->
                    <div class="card-body">
                        <dl>

                            <dt>
                                1.
                                Unit 1
                            </dt>
                            <dt>teaching hours: 3 hrs</dt>
                            <dd><p>1.1 Compiler Structure: Analysis and Synthesis Model of Compilation, different sub-phases within analysis and synthesis phases</p><p>1.2 Basic concepts related to Compiler such as interpreter, simple One-Pass Compiler, preprocessor, macros, symbol table and error handler.</p></dd>

                            <dt>
                                2.
                                Unit 2
                            </dt>
                            <dt>teaching hours: 22 hrs</dt>
                            <dd><p>2.1 Lexical Analysis: Its role, Specification and Recognition of tokens, Input Buffer, Finite Automata relevant to compiler construction syntactic specification of languages, Optimization of DFA based pattern matchers</p><p>2.2 Syntax Analysis: Its role, Basic parsing techniques: Problem of Left Recursion, Left Factoring, Ambiguous Grammar, Top-down parsing, Bottom-up parsing, LR parsing</p><p>2.3 Semantic Analysis: Static &amp; Dynamic Checks, Typical Semantic errors, Scoping, Type Checking; Syntax directed definitions (SDD) &amp; Translation (SDT), Attribute Types: Synthesized &amp; Inherited, Annotated Parse Tree, S-attributed and L-attributed grammar, Applications of syntax directed translation, Type Systems, Type Checking and Conversion</p></dd>

                            <dt>
                                3.
                                Unit 3
                            </dt>
                            <dt>teaching hours: 4 hrs</dt>
                            <dd><p>3.1 Symbol Table Design: Function of Symbol Table, Information provided by Symbol Table, Attributes and Data Structures for symbol table</p><p>3.2 Run–time storage management</p></dd>

                            <dt>
                                4.
                                Unit 4
                            </dt>
                            <dt>teaching hours: 16 hrs</dt>
                            <dd><p>4.1 Intermediate Code Generator: High-level and Low-level Intermediate representation, Syntax tree &amp; DAG representations, Three-address code, Quadruples, Triples, SDT for intermediate code, Intermediate code generation for Declarations, Assignments, Control Flow, Boolean Expressions and Procedure Calls; Back patching</p><p>4.2 Code Generator: Factors affecting a code generator, Target Language, Basic blocks and flow graphs, Dynamic programming code-generation algorithm</p><p>4.3 Code Optimization: Need and criteria of Code Optimization, Basic optimization techniques</p><p>4.4 Case Studies of some compilers like C compiler, C++ complier</p></dd>

                        </dl>
                    </div>
                    <!-- /.card-body -->
                </div>
                <!-- /.card -->
            </div>
            <!-- ./col -->

        </div>

        <div class="row">
            <div class="col">
                <div class="card">
                    <div class="card-header">
                        <h3 class="card-title">
                            <i class="fa fa-desktop"></i>
                            <i class="fa fa-flask"></i>
                            Lab and Practical works
                        </h3>
                     
                    </div>
                    <!-- /.card-header -->
                    <div class="card-body">
                        <p><b>Laboratory Works:</b></p><p>The laboratory work develops practical knowledge on different concepts of compiler design.</p><p>Students should</p><ul><li>&nbsp;Create a project by using lexical analyzer generator or any high level language</li><li>&nbsp;Create a parser by using parser generator or any high level language</li><li>&nbsp;Write programs for intermediate code generation and machine code generation</li><li>&nbsp;Create front end of a compiler and using general purpose programming languages</li></ul>
                    </div>
                    <!-- /.card-body -->
                </div>
                <!-- /.card -->
            </div>
            <!-- ./col -->

        </div>


</main>
    </div>
