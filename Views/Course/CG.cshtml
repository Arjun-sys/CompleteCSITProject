@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
}
<div class="terms">


        <p>This page contains Syllabus of Computer Graphics of CSIT. </p>

        <div class="row no-gutters">

        </div>


        <div class="card col-xl-6 col-lg-6 col-md-6 col-sm-12">


            <div class="card-body p-0">
                <table class="table table-sm">

                    <tbody>
                        <tr>
                            <td>Title</td>

                            <td>
                                Computer Graphics
                            </td>
                        </tr>
                        <tr>
                            <td>Course code</td>

                            <td>CSC209</td>
                        </tr>
                        <tr>
                            <td>Nature of course</td>

                            <td>Theory + Lab</td>
                        </tr>
                        <tr>
                            <td>Semester</td>

                            <td>Third-Semester</td>
                        </tr>
                        <tr>
                            <td>Full marks</td>

                            <td>60 + 20 + 20</td>
                        </tr>
                        <tr>
                            <td>Pass marks</td>

                            <td>24 + 8 + 8</td>
                        </tr>
                        <tr>
                            <td>Credit Hrs</td>

                            <td>3</td>
                        </tr>
                        <tr>
                            <td>Elective/Compulsary</td>

                            <td>Compulsary</td>

                        </tr>

                    </tbody>
                </table>
            </div>

        </div>



        <div class="row">
            <div class="col">
                <div class="card">
                    <div class="card-header">
                        <h3 class="card-title">
                            <i class="fa fa-book"></i>
                            Course Description
                        </h3>
                       
                    </div>
                    <!-- /.card-header -->
                    <div class="card-body">
                        <p><b>Course Description: </b>The course coversconcepts of graphics hardware, software, and</p><p>applications,data structures for representing 2D and 3D geometric objects, drawing algorithms</p><p>for graphical objects, techniques for representing and manipulating geometric objects,</p><p>illumination and lighting models, and concept of virtual reality.</p><p><br></p><p><b>Course Objectives:</b> The objective of this course is to understand the theoretical foundation as</p><p>wellas the practical applications of 2D and 3D graphics.</p><div><br></div>
                    </div>
                    <!-- /.card-body -->
                </div>
                <!-- /.card -->
            </div>
            <!-- ./col -->

        </div>

        <div class="row">
            <div class="col">
                <div class="card">
                    <div class="card-header">
                        <h3 class="card-title">
                            <i class="fa fa-file"></i>
                            Units and Unit Content
                        </h3>
                       
                    </div>
                    <!-- /.card-header -->
                    <div class="card-body">
                        <dl>

                            <dt>
                                1.
                                Introduction of Computer Graphics
                            </dt>
                            <dt>Teaching Hours: 3 hrs</dt>
                            <dd><p>1.1 A Brief Overview of Computer Graphics, Areas of Applications.</p><p>1.2 Graphics Hardware: Display Technology, Architecture of Raster-Scan</p><p>Displays,Vector Displays, Display Processors, Hard copy device. Input Devices.</p><p>1.3 Graphics Software: Software standards, Need of machine independent graphics</p><p>language.</p><div><br></div></dd>

                            <dt>
                                2.
                                Scan Conversion Algorithm
                            </dt>
                            <dt>Teaching Hours: 6 hrs</dt>
                            <dd><p>2.1 Scan Converting a Point and a straight Line: DDA Line Algorithm, Bresenham’s Line</p><p>Algorithm</p><p>2.2 Scan Converting Circle and Ellipse :Mid Point Circle and Ellipse Algorithm</p><p>2.3 Area Filling: Scan Line Polygon fill Algorithm, Inside-outside Test, Scan line fill of</p><p>Curved Boundary area, Boundary-fill and Flood-fill algorithm</p><div><br></div></dd>

                            <dt>
                                3.
                                Two-Dimensional Geometric Transformations
                            </dt>
                            <dt>Teaching Hours: 5 hrs</dt>
                            <dd><p>3.1 Two-Dimensional translation, Rotation, Scaling, Reflection and Shearing</p><p>3.2 Homogeneous Coordinate and 2D Composite Transformations. Transformation</p><p>between Co-ordinate Systems.</p><p>3.3 Two Dimensional Viewing: Viewing pipeline, Window to viewport coordinate</p><p>transformation</p><p>3.4 Clipping: Point, Lines(Cohen Sutherland line clipping, Liang-Barsky Line Clipping) ,</p><p>Polygon Clipping(Sutherland Hodgeman polygon clipping)</p><div><br></div></dd>

                            <dt>
                                4.
                                Three-Dimensional Geometric Transformation
                            </dt>
                            <dt>Teaching Hours: 5 hrs</dt>
                            <dd><p>4.1 Three-Dimensional translation, Rotation, Scaling, Reflection and Shearing</p><p>4.2 Three-Dimensional Composite Transformations</p><p>4.3 Three-Dimensional Viewing: Viewing pipeline, world to screen viewing</p><p>transformation, Projection concepts(Orthographic, parallel, perspective projections)</p><div><br></div></dd>

                            <dt>
                                5.
                                3D Objects Representation
                            </dt>
                            <dt>Teaching Hours: 7 hrs</dt>
                            <dd><p>5.1&nbsp; Representing Surfaces: Boundary and Space partitioning</p><div><div>5.1.1 Polygon Surface: Polygon tables , Surface normal and Spatial orientation of surfaces, Plane equations, Polygon meshes</div><div>5.1.2 Wireframe Representation</div><div>5.1.3 Blobby Objects</div><div>5.2 Representing Curves: Parametric Cubic Curves, Spline Representation, Cubic spline interpolation, Hermite Curves, Bezier and B-spline Curve and surface</div><div>5.3 Quadric Surface: Sphere and Ellipsoid</div></div><div><br></div></dd>

                            <dt>
                                6.
                                Solid Modeling
                            </dt>
                            <dt>Teaching Hours: 4 hrs</dt>
                            <dd><p>6.1 Sweep ,Boundary and Spatial-Partitioning Representation</p><p>6.2 Binary Space Partition Trees (BSP)</p><p>6.3 Octree Representation</p><div><br></div></dd>

                            <dt>
                                7.
                                Visible Surface Detections
                            </dt>
                            <dt>Teaching Hours: 5 hrs</dt>
                            <dd><p>7.1 Image Space and Object Space Techniques</p><p>7.2 Back Face Detection, Depth Buffer (Z-buffer), A-Buffer and Scan-Line Algorithms.</p><p>7.3 Depth Sorting Method (Painter’s Algorithm)</p><p>7.4 BSP tree Method, Octree and Ray Tracing</p><div><br></div></dd>

                            <dt>
                                8.
                                Illumination Models and Surface Rendering Techniq
                            </dt>
                            <dt>Teaching Hours: 5 hrs</dt>
                            <dd><p>8.1 Basic Illumination Models: Ambient light, Diffuse reflection, Specular reflection and</p><p>Phong model</p><p>8.2 Intensity attenuation and Color consideration ,Transparency, Shadows</p><p>8.3 Polygon Rendering Methods : Constant intensity shading, Gouraud shading , Phong</p><p>Shading and Fast Phong Shading</p><div><br></div></dd>

                            <dt>
                                9.
                                Introduction to Virtual Reality
                            </dt>
                            <dt>Teaching Hours: 2 hrs</dt>
                            <dd><p>9.1 Concept of Virtual reality</p><p>9.2 Virtual Reality Components of VR System, Types of VR System, 3D Position</p><p>Trackers, Navigation and Manipulation Interfaces</p><p>9.3 Application of VR</p><div><br></div></dd>

                            <dt>
                                10.
                                Introduction to OpenGL
                            </dt>
                            <dt>Teaching Hours: 3 hrs</dt>
                            <dd><p>1.1 Introduction, Callback functions, Color commands, Drawings pixels, lines, polygons</p><p>using OpenGL, Viewing and Lighting</p><div><br></div></dd>

                        </dl>
                    </div>
                    <!-- /.card-body -->
                </div>
                <!-- /.card -->
            </div>
            <!-- ./col -->

        </div>

        <div class="row">
            <div class="col">
                <div class="card">
                    <div class="card-header">
                        <h3 class="card-title">
                            <i class="fa fa-desktop"></i>
                            <i class="fa fa-flask"></i>
                            Lab and Practical works
                        </h3>
                        
                    </div>
                    <!-- /.card-header -->
                    <div class="card-body">
                        <p><b>Laboratory Works:</b></p><p>Students should be able to write program on the most of the contents listed in syllabus, using any</p><p>known programming language (C, C++) in previous semester. Majorly, students should on</p><p>computer graphics primitives like line, circle and ellipse drawing algorithm to hidden surface</p><p>removal techniques. After completing the basic lab session the students must be able to design</p><p>some project works like game, 3D rotation, screen saver etc. Some sample lab sessions can be as</p><p>following:-</p><p><b>Unit 2 : Scan Conversions Algorithm (10 Hours)</b></p><ul><li>Study of Fundamental Graphics Functions</li><li>Implementation of Line drawing algorithms: DDA Algorithm, Bresenham's Algorithm<br></li><li>Implementation of Circle drawing algorithms: Bresenham's Algorithm, Mid-Point Algorithm<br></li></ul><p><b>Unit 3 : Two-Dimensional Geometric Transformations ( 4 Hours)</b></p><ul><li>Simulation of 2D transformation, Rotation and Scaling<br></li><li>Write a program to implement Cohen Sutherland line clipping algorithm<br></li></ul><p><b>Unit 4 : Three-Dimensional Geometric Transformation (12 Hours)</b><br></p><p><br></p><ul><li>Write a program to perform shear transformation on a rectangle</li><li>Write a program to perform 2D Transformation on a line</li><li>Write a program to draw a car using in build graphics function and translate it from bottom&nbsp;left corner to right bottom corner of screen</li><li>Write a program to draw a cube using in build library function and perform 3D&nbsp;transformations</li></ul><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Translations in x, y, z directions<br></p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Rotation by angle 450 about z axis, rotation by 600 about y-axis in succession.</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Scaling in x-direction by a factor of 2, scaling in y- direction by a factor of 3<br></p><p><br></p><p><b>Unit 5 : 3D Objects Representation ( 4 Hours)</b></p><ul><li>Implementation of polygon tables.<br></li><li>Write a program to draw Bezier curve, sphere<br></li></ul><p><br></p><p><b>Unit 7 : Visible Surface Detections (10 Hours)</b></p><ul><li>Back face detection:- Implementation of Depth Buffer, A – Buffer, Scan-Line algorithm<br></li><li>Implementation of rotation of 3D cube.</li></ul><p><br></p><p><b>Unit 10 : Introduction to OpenGL (5 Hours)</b></p><ul><li>Event driven programming<br></li><li>Point, Line and Polygon</li><li>Drawing 3D objects<br></li></ul><div><br></div>
                    </div>
                    <!-- /.card-body -->
                </div>
                <!-- /.card -->
            </div>
            <!-- ./col -->

        </div>



    </div>
