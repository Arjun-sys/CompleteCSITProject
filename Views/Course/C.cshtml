@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
}
<div class="terms">

    <div class="row no-gutters">
        <div class="col" style="margin-bottom: 1%; text-align: center;">
            <h1 style="margin-top: 1%;" class="text-center"> C Programming</h1>
            <a asp-controller="Course" asp-action="C" class=" btn btn-info">Syllabus</a>
            <a asp-controller="Course" asp-action="Cnote" class=" btn btn-outline-info">Notes</a>



        </div>
    </div>



    <div class="card col-xl-6 col-lg-6 col-md-6 col-sm-12" >


        <div class="card-body p-0">
            <table class="table table-sm">

                <tbody>
                    <tr>
                        <td>Title</td>

                        <td>
                            C Programming
                        </td>
                    </tr>
                    <tr>
                        <td>Course code</td>

                        <td>CSC110</td>
                    </tr>
                    <tr>
                        <td>Nature of course</td>

                        <td>Theory + Lab</td>
                    </tr>
                    <tr>
                        <td>Semester</td>

                        <td>First-Semester</td>
                    </tr>
                    <tr>
                        <td>Full marks</td>

                        <td>60 + 20 + 20</td>
                    </tr>
                    <tr>
                        <td>Pass marks</td>

                        <td>24 + 8 + 8</td>
                    </tr>
                    <tr>
                        <td>Credit Hrs</td>

                        <td>3</td>
                    </tr>
                    <tr>
                        <td>Elective/Compulsary</td>

                        <td>Compulsary</td>

                    </tr>

                </tbody>
            </table>
        </div>

    </div>



    <div class="row">
        <div class="col">
            <div class="card">
                <div class="card-header">
                    <h3 class="card-title">
                        <i class="fa fa-book"></i>
                        Course Description
                    </h3>

                </div>
                <!-- /.card-header -->
                <div class="card-body">
                    <p><b>Course Description:</b> This course covers the concepts of structured programming using C programming language.</p><p><br></p><p><b>Course Objective:</b> This course is designed to familiarize students to the techniques of programming in C.</p><div><br></div>
                </div>
                <!-- /.card-body -->
            </div>
            <!-- /.card -->
        </div>
        <!-- ./col -->

    </div>

    <div class="row">
        <div class="col">
            <div class="card">
                <div class="card-header">
                    <h3 class="card-title">
                        <i class="fa fa-file"></i>
                        Units and Unit Content
                    </h3>

                </div>
                <!-- /.card-header -->
                <div class="card-body">
                    <dl>

                        <dt>
                            1.
                            Problem Solving with Computer
                        </dt>
                        <dt>Teaching Hours: 2 hrs</dt>
                        <dd><p>1.1 Problem analysis (requirement analysis, program design, program coding, program testing, software installation and maintenance )</p><p>1.2 Algorithms and Flowchart (symbols start/stop, read/print, processing statement, condition check, direction of flow, connectors)</p><p>1.3 Coding, Compilation and Execution (compiler, integrated development environment,compiling and linking )</p><p>1.4 History of C,</p><p>1.5 Structure of C program (preprocessor directive, #include and #define directives, header files and library files)</p><p>1.6 Debugging, Testing and Documentation (compiler error, linker error, and run-time error)</p><div><br></div></dd>

                        <dt>
                            2.
                            Elements of C
                        </dt>
                        <dt>Teaching Hours: 4 hrs</dt>
                        <dd><p>2.1 C Standards( ANSI C and C99),</p><p>2.2 C Character Set (letters, digits, special characters and white spaces),</p><p>2.3 C Tokens (keywords, identifiers, operators, constants, and special symbols),</p><p>2.4 Escape sequence,</p><p>2.5 Delimiters,</p><p>2.6 Variables,</p><p>2.7 Data types (Basic, Derived, and User Defined),</p><p>2.8 Structure of a C program,</p><p>2.9 Executing a C program,</p><p>2.10 Constants/ Literals,</p><div><div>2.11 Expressions, Statements and Comments.</div></div><div><br></div></dd>

                        <dt>
                            3.
                            Input and Output
                        </dt>
                        <dt>Teaching Hours: 2 hrs</dt>
                        <dd><p>3.1 Conversion specification,</p><p>3.2 Reading a character,</p><p>3.3 Writing a character,</p><p>3.4 I/O operations,</p><p>3.5 Formatted I/O</p><div><br></div></dd>

                        <dt>
                            4.
                            Operators and Expression
                        </dt>
                        <dt>Teaching Hours: 4 hrs</dt>
                        <dd><p>4.1 Arithmetic operator,</p><p>4.2 Relational operator,</p><p>4.3 Logical or Boolean operator,</p><p>4.4 Assignment Operator,</p><p>4.5 Ternary operator,</p><p>4.6 Bitwise operator,</p><p>4.7 Increment or Decrement operator,</p><p>4.8 Conditional operator,</p><p>4.9 Special Operators( sizeof and comma),</p><p>4.10 Evaluation of Expression (implicit and explicit type conversion),</p><p>4.11 Operator Precedence and Associativity.</p><div><br></div></dd>

                        <dt>
                            5.
                            Control Statement
                        </dt>
                        <dt>Teaching Hours: 4 hrs</dt>
                        <dd><p>5.1 Conditional Statements,</p><p>5.2 Decision Making and Branching (if, if else, nested if else, else if ladder, and switch statements)</p><p>5.3 Decision Making and Looping (for, while, and do while loops)</p><p>5.4 Exit function,</p><p>5.5 Break and Continue.</p><div><br></div></dd>

                        <dt>
                            6.
                            Arrays
                        </dt>
                        <dt>Teaching Hours: 6 hrs</dt>
                        <dd><p>6.1 Introduction to Array,</p><p>6.2 Types of Array (Single Dimensional and Multidimensional),</p><p>6.3 Declaration and Memory Representation of Array,</p><p>6.4 Initialization of array,</p><p>6.5 Character Array and Strings,</p><div><div>6.6 Reading and Writing Strings,</div><div>6.7 Null Character,</div><div>6.8 String Library Functions( string length, string copy, string concatenation, string compare)</div></div><div><br></div></dd>

                        <dt>
                            7.
                            Functions
                        </dt>
                        <dt>Teaching Hours: 5 hrs</dt>
                        <dd><p>7.1 Library Functions,</p><p>7.2 User defined functions,</p><p>7.3 Function prototype, Function call, and Function Definition,</p><p>7.4 Nested and Recursive Function,</p><p>7.5 Function Arguments and Return Types,</p><p>7.6 Passing Arrays to Function,</p><p>7.7 Passing Strings to Function,</p><p>7.8 Passing Arguments by Value, Passing Arguments by Address,</p><p>7.9 Scope visibility and lifetime of a variable, Local and Global Variable,</p><p><br></p><div><br></div></dd>

                        <dt>
                            8.
                            Structure and Union
                        </dt>
                        <dt>Teaching Hours: 5 hrs</dt>
                        <dd><p>8.1 Introduction,</p><p>8.2 Array of structure,</p><p>8.3 Passing structure to function,</p><p>8.4 Passing array of structure to function,</p><p>8.5 Structure within structure ( Nested Structure),</p><p>8.6 Union,</p><p>8.7 Pointer to structure</p><div><br></div></dd>

                        <dt>
                            9.
                            Pointers
                        </dt>
                        <dt>Teaching Hours: 6 hrs</dt>
                        <dd><p>9.1 Introduction,</p><p>9.2 The &amp; and * operator,</p><p>9.3 Declaration of pointer,</p><p>9.4 Chain of Pointers,</p><p>9.5 Pointer Arithmetic,</p><p>9.6 Pointers and Arrays,</p><p>9.7 Pointers and Character Strings,</p><p>9.8 Array of Pointers,</p><p>9.9 Pointers as Function Arguments,</p><p>9.10 Function Returning pointers,</p><p>9.11 Pointers and Structures,</p><div><div>9.12 Dynamic Memory Allocation</div></div><div><br></div></dd>

                        <dt>
                            10.
                            File Handling in C
                        </dt>
                        <dt>Teaching Hours: 4 hrs</dt>
                        <dd><p>10.1 Concept of File,</p><p>10.2 Opening and closing of File (naming, opening, and closing a file)</p><p>10.3 Input Output Operations in File (reading data from file, writing data to a file)</p><p>10.4 Random access in File (ftell(), fseek(), rewind())</p><p>10.5 Error Handling in Files (feof(), ferror())</p><p>(Note: address some of the functions associated with file handling, e.g. fopen(), fclose(),</p><p>fgetc(), fputc(), fprintf(), fscanf())</p><div><br></div></dd>

                        <dt>
                            11.
                            Introduction to Graphics
                        </dt>
                        <dt>Teaching Hours: 3 hrs</dt>
                        <dd><p>11.1 Concepts of Graphics (graphics.h header file)</p><p>11.2 Graphics Initialization and Modes (graphics driver and graphics mode)</p><p>11.3 Graphics Function (Basic functions of graphics.h e.g. line(), arc(), circle(), ellipse(),</p><p>floodfill(), getmaxx(), getmaxy())</p><div><br></div></dd>

                    </dl>
                </div>
                <!-- /.card-body -->
            </div>
            <!-- /.card -->
        </div>
        <!-- ./col -->

    </div>

    <div class="row">
        <div class="col">
            <div class="card">
                <div class="card-header">
                    <h3 class="card-title">
                        <i class="fa fa-desktop"></i>
                        <i class="fa fa-flask"></i>
                        Lab and Practical works
                    </h3>

                </div>
                <!-- /.card-header -->
                <div class="card-body">
                    <p><br></p><p><span style="font-weight: 700;">Details of Laboratory work in C programming</span></p><p><span style="font-weight: 700;">Laboratory Works:</span>&nbsp;This is the first “programming” course in B.Sc.CSIT. It builds the foundation on</p><p>how to write a program using any high level language. Hence, this course requires a lot of</p><p>programming practice so that students will be able to develop good logic building and program</p><p>developing capability which is essential throughout the B.Sc.CSIT course and thereafter. 20% of the</p><p>total marks is assigned from the practical. Some important contents that should be included in lab</p><p>exercises are as follows:</p><p><span style="font-weight: 700;">Unit 1:----</span><span style="font-weight: 700;">2 Hrs.</span></p><p>Create, compile, debug, run and test simple C programs</p><p><span style="font-weight: 700;">Unit 2,3,4:----</span><span style="font-weight: 700;">5 Hrs.</span></p><p>Using different data types available in C, perform arithmetic operations in C, perform</p><p>formatted input/output operations, perform character input/output operations.</p><p>Using relational operator, logical operator, assignment operator, ternary operator, and other</p><p>operators. Evaluation of Expression to check operator precedence and associativity.</p><p><span style="font-weight: 700;">Unit 5: ----</span><span style="font-weight: 700;">6 Hrs.</span></p><p>Create decision making programs using control statements like; if, if..else, if..else ladder,</p><p>nested if, and switch cases.</p><p>Create programs using loops (for, while, do while, nested loops) and realize the differences</p><p>between entry controlled and exit controlled loops.</p><p><span style="font-weight: 700;">Unit 6:----</span><span style="font-weight: 700;">6 Hrs.</span></p><p>Create, manipulate arrays and matrices (single and multi-dimensional), work with pointers,</p><p>dynamically allocate/de-allocate storage space during runtime, manipulate strings (character</p><p>arrays) using various string handling functions.</p><p><span style="font-weight: 700;">Unit 7:----</span><span style="font-weight: 700;">6 Hrs.</span></p><p>Create user-defined functions with/without parameters or return type, create recursive</p><p>functions, use function call by value and call by address, work with automatic, global and</p><p>static variables.</p><p><br></p><p><span style="font-weight: 700;">Unit 8:----</span><span style="font-weight: 700;">5 Hrs.</span></p><p>Create and use simple structures, array of structures, nested structure. Passing structure and</p><p>array of structure to function, concept of pointer to structure</p><p><span style="font-weight: 700;">Unit 9:----</span><span style="font-weight: 700;">6 Hrs.</span></p><p>Create programs that addresses pointer arithmetic, pointers and arrays, pointer and character</p><p>strings, pointers and functions, pointer and structure, and dynamic memory allocation.</p><p><span style="font-weight: 700;">Unit 10:----</span><span style="font-weight: 700;">5 Hrs.</span></p><p>Create files that address random access and input/output operations in file, create files to keep</p><p>records and manipulation of records etc.</p><p><span style="font-weight: 700;">Unit 11:----</span><span style="font-weight: 700;">4 Hrs.</span></p><p>Create graphics program that address some basic functions of graphics.h header file, e.g.</p><p>line(), arc(), circle(), ellipse(), floodfill(), getmaxx(), getmaxy() etc.</p><p>Note: Motivate students to create small project work integrating all of the above concepts.</p>
                </div>
                <!-- /.card-body -->
            </div>
            <!-- /.card -->
        </div>
        <!-- ./col -->

    </div>



</div>