@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
}
<div class="terms">

    <p>This page contains Syllabus of Discrete Structures of CSIT. </p>

   

    <div class="card col-xl-6 col-lg-6 col-md-6 col-sm-12">


        <div class="card-body p-0">
            <table class="table table-sm">

                <tbody>
                    <tr>
                        <td>Title</td>

                        <td>
                            Discrete Structures
                        </td>
                    </tr>
                    <tr>
                        <td>Course code</td>

                        <td>CSC160</td>
                    </tr>
                    <tr>
                        <td>Nature of course</td>

                        <td>Theory + Lab</td>
                    </tr>
                    <tr>
                        <td>Semester</td>

                        <td>Second-Semester</td>
                    </tr>
                    <tr>
                        <td>Full marks</td>

                        <td>60 + 20 + 20</td>
                    </tr>
                    <tr>
                        <td>Pass marks</td>

                        <td>24 + 8 + 8</td>
                    </tr>
                    <tr>
                        <td>Credit Hrs</td>

                        <td>3</td>
                    </tr>
                    <tr>
                        <td>Elective/Compulsary</td>

                        <td>Compulsary</td>

                    </tr>

                </tbody>
            </table>
        </div>

    </div>



    <div class="row">
        <div class="col">
            <div class="card">
                <div class="card-header">
                    <h3 class="card-title">
                        <i class="fa fa-book"></i>
                        Course Description
                    </h3>
                    
                </div>
                <!-- /.card-header -->
                <div class="card-body">
                    <p><b>Course Description:</b> The course covers fundamental concepts of discrete structure like introduce logic, proofs, sets, relations, functions, counting, and probability, with an emphasis on applications in computer science.</p><p><br></p><p><b>Course Objectives:</b> The main objective of the course is to introduce basic discrete structures, explore applications of discrete structures in computer science, and understand concepts of Counting, Probability, Relations and Graphs respectively.</p><div><br></div>
                </div>
                <!-- /.card-body -->
            </div>
            <!-- /.card -->
        </div>
        <!-- ./col -->

    </div>

    <div class="row">
        <div class="col">
            <div class="card">
                <div class="card-header">
                    <h3 class="card-title">
                        <i class="fa fa-file"></i>
                        Units and Unit Content
                    </h3>
                    
                </div>
                <!-- /.card-header -->
                <div class="card-body">
                    <dl>

                        <dt>
                            1.
                            Basic Discrete Structures
                        </dt>
                        <dt>Teaching Hours: 7 hrs</dt>
                        <dd><p>1.1. Sets: Sets and Subsets, Power Set, Cartesian Product, Set Operations, Venn Diagram, Inclusion-Exclusion Principle, Computer Representation of Sets</p><p>1.2. Functions: Basic Concept, Injective and Bijective Functions, Inverse and Composite Functions, Graph of Functions, Functions for Computer Science (Ceiling Function, Floor Function, Boolean Function, Exponential Function), Fuzzy Sets and Membership Functions, Fuzzy Set Operations</p><p>1.3. Sequences and Summations: Basic Concept of Sequences, Geometric and Arithmetic Progression, Single and Double Summation</p><div><br></div></dd>

                        <dt>
                            2.
                            Integers and Matrices
                        </dt>
                        <dt>Teaching Hours: 6 hrs</dt>
                        <dd><p>2.1. Integers: Integers and Division, Primes and Greatest Common Divisor, Extended Euclidean Algorithm, Integers and Algorithms, Applications of Number Theory (Linear Congruencies, Chinese Remainder Theorem, Computer Arithmetic with Large Integers)</p><p>2.2. Matrices: Zero-One Matrices, Boolean Matrix Operations</p><div><br></div></dd>

                        <dt>
                            3.
                            Logic and Proof Methods
                        </dt>
                        <dt>Teaching Hours: 6 hrs</dt>
                        <dd><p>3.1. Logic: Propositional Logic, Propositional Equivalences, Predicates and Quantifiers, Negation of Quantified Statements, Proof of quantified statements, Nested Quantifiers, Rules of Inferences</p><p>3.2. Proof Methods: Basic Terminologies, Proof Methods (Direct Proof, Indirect Proof, Proof >by Contradiction, Proof By Contraposition, Exhaustive Proofs and Proof by Cases), Mistakes in Proof</p><div><br></div></dd>

                        <dt>
                            4.
                            Induction and Recursion
                        </dt>
                        <dt>teaching hours: 5 hrs</dt>
                        <dd><p>4.1. Induction: mathematical Induction, Strong Induction and Well Ordering, Induction in General</p><p>4.2. Recursive Definitions and Structural Induction, Recursive Algorithms, Proving Correctness of Recursive Algorithms</p><div><br></div></dd>

                        <dt>
                            5.
                            Counting and Discrete Probability
                        </dt>
                        <dt>Teaching Hours: 9 hrs</dt>
                        <dd><p>5.1. Counting: Basics of Counting, Pigeonhole Principle, Permutations and Combinations, Two Element Subsets, Counting Subsets of a Set, Binomial Coefficients, Generalized >Permutations and Combinations, Generating Permutations and Combinations</p><p>5.2. Discrete Probability: Introduction to Discrete Probability, Probability Theory, Probability Calculation in Hashing, Expected Value and Variance, Randomized Algorithms</p><p>5.3. Advanced Counting: Recurrence Relations, Solving Recurrence Relations (Homogeneous and Non-Homogeneous equations), Introduction to Divide and Conquer</p><div><br></div></dd>

                        <dt>
                            6.
                            Relations and Graphs
                        </dt>
                        <dt>Teaching Hours 12 hrs</dt>
                        <dd><p>6.1. Relations: Relations and their Properties, N-ary Relations with Applications, Representing Relations, Closure of Relations, Equivalence Relations, Partial Ordering</p><p>6.2. Graphs: Graphs Basics, Graph Types, Graph Models, Graph Representation, Graph Isomorphism, Connectivity in Graphs, Euler and Hamiltonian Path and Circuits, Matching Theory, Shortest Path Algorithm (Dijkstra’s Algorithm), Travelling Salesman Problem, Graph Coloring</p><p>6.3. Trees: Introduction and Applications, Tree Traversals, Spanning Trees, Minimum Spanning Trees (Kruskal’s Algorithm)</p><p>6.4. Network Flows: Graph as Models of Flow of Comodities, Flows, Maximal Flows and Minimal Cuts, The Max Flow-Min Cut Theorem</p><div><br></div></dd>

                    </dl>
                </div>
                <!-- /.card-body -->
            </div>
            <!-- /.card -->
        </div>
        <!-- ./col -->

    </div>

    <div class="row">
        <div class="col">
            <div class="card">
                <div class="card-header">
                    <h3 class="card-title">
                        <i class="fa fa-desktop"></i>
                        <i class="fa fa-flask"></i>
                        Lab and Practical works
                    </h3>
                    
                </div>
                <!-- /.card-header -->
                <div class="card-body">
                    <p><span style="font-weight: 700;">Laboratory Work (45 Hrs)</span></p><p>The laboratory work consists of implementing the algorithms and concepts discussed in the class.</p><p>Student should write programs to demonstrate concepts listed below.</p><p><span style="font-weight: 700;">Unit 1 (10 Hr)</span></p><p>1. Programs to implement set operations union, intersection, difference, and Cartesian product</p><p>2. Programs to implement ceiling and floor functions</p><p>3. Programs to implement fuzzy set operations</p><p><span style="font-weight: 700;">Unit 2 (10 Hr)</span></p><p>1. Programs to implement Euclidean and Extended Euclidean algorithms</p><p>2. Programs to implement binary integer addition, multiplication, and division</p><p>3. Programs to implement Boolean matrix operations join, product, and Boolean product</p><p>4. Programs to perform operations with large integers by breaking down them into set of small</p><p>integers</p><p><span style="font-weight: 700;">Unit 3 (6 Hr)</span></p><p>1. Programs to generate truth tables of compound propositions</p><p>2. Programs to test validity of arguments by using truth tables</p><p><span style="font-weight: 700;">Unit 4 (2 Hr)</span></p><p>1. Programs to compute an, bn mod m, linear search etc by using recursion</p><p><span style="font-weight: 700;">Unit 5 (7 Hr)</span></p><p>1. Programs to generate permutations and combinations</p><p>2. Programs to implements some probabilistic and randomized algorithms</p><p><span style="font-weight: 700;">Unit 6 (10 Hr)</span></p><p>1. Programs for representing relations, testing its properties, and testing equivalence</p><p>2. Programs to represent graphs, finding shortest path, and generating minimum spanning trees</p><div><br></div>
                </div>
                <!-- /.card-body -->
            </div>
            <!-- /.card -->
        </div>
        <!-- ./col -->

    </div>



</div>